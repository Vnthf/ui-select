{"version":3,"sources":["select.js","select_without_templates.js","templates.js"],"names":["isMacOS","test","window","navigator","userAgent","KEY","TAB","ENTER","ESC","SPACE","LEFT","UP","RIGHT","DOWN","SHIFT","CTRL","ALT","PAGE_UP","PAGE_DOWN","HOME","END","BACKSPACE","DELETE","COMMAND","A","C","MAP","91","8","9","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","43","44","45","46","48","49","50","51","52","53","54","55","56","57","59","61","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","96","97","98","99","100","101","102","103","104","105","106","107","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","144","145","186","187","188","189","190","191","192","219","220","221","222","isControl","e","k","which","metaKey","ctrlKey","altKey","isFunctionKey","isVerticalMovement","indexOf","isAllowControlKey","isSelectAll","event","this","isPressedCtrlKey","isCopy","toSeparator","sep","undefined","UTIL","copyToClipboard","text","clipboardData","setData","document","queryCommandSupported","textarea","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","angular","element","prototype","querySelectorAll","selector","closest","elem","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","bind","parentElement","latestId","uis","module","constant","theme","searchEnabled","sortable","placeholder","refreshDelay","closeOnSelect","skipFocusser","dropdownPosition","generateId","appendToBody","service","minErr","$$minErr","error","apply","arguments","message","replace","RegExp","Error","directive","link","scope","attrs","ctrl","transclude","clone","append","removeAttr","uisTranscludeAppend","filter","escapeRegexp","queryToEscape","matchItem","query","factory","$document","$window","boundingClientRect","getBoundingClientRect","width","prop","height","top","pageYOffset","documentElement","scrollTop","left","pageXOffset","scrollLeft","setDragImageIEPreload","image","bodyEl","preloadEl","background","src","opacity","setTimeout","DataTransfer","setDragImage","offsetX","offsetY","randomDraggingClassName","dragStylesCSS","dragStylesEl","headEl","Math","round","random","pow","Date","now","innerText","join","getElementsByTagName","uiSelectConfig","RepeatParser","uiSelectMinErr","$compile","$timeout","restrict","require","tabWrapper","templateUrl","tElement","addClass","parent","attr","compile","tAttrs","repeat","$select","transcludeFn","groupByExp","groupBy","groupFilterExp","groupFilter","parseRepeatAttr","disableChoiceExpression","uiDisableChoice","onHighlightCallback","onHighlight","toLowerCase","refreshAttr","refresh","groups","length","getGroupNgRepeatExpression","choices","parserResult","repeatExpression","addEventListener","itemName","generatedId","multiple","children","rowsInner","timer","$watch","newValue","open","activate","activeIndex","cancel","ensureHighlightVisible","minimumInputLength","search","items","$observe","$eval","controller","$scope","$element","$filter","$$uisDebounce","$parse","$injector","_findIndex","collection","predicate","thisArg","findIndex","value","list","Object","i","call","_resetSearchInput","skipSelect","resetSearchInput","tagging","isActivated","EMPTY_SEARCH","newItem","parseStringToTagMap","selected","item","isEqual","_groupsFilter","groupNames","j","result","name","push","_selectArrayItem","itemList","option","forEach","index","_option","copy","isNumber","smallerIndexNum","max","_convertTokens","taggingTokens","tokens","len","_makeTagListUsingFct","stringTokens","stringToken","fct","isArray","concat","_handleSelection","key","processed","preventDefault","_enableKeyDownMode","resetOnEsc","close","skipResetInput","timeoutInstance","keyDownMode","_pasteData","el","data","selectionStart","startPos","endPos","selectionEnd","slice","paste","removeSelected","focus","disabled","focusser","taggingInvalid","lockChoiceExpression","clickTriggeredSelect","$animate","get","err","searchInput","isEmpty","isUndefined","initSearchValue","avoidReset","$broadcast","taggingLabel","container","on","enabled","phase","focusSearchInput","findGroupByName","group","repeatAttr","updateGroups","groupFn","groupName","isFunction","groupFilterFn","setPlainItems","setItemsFn","parse","isGrouped","itemProperty","originalSource","source","createArrayFromObject","origSrc","$uisSource","keys","map","v","keyName","filters","newVal","oldVal","refreshItems","callbackData","noop","calculateDropdownPos","$watchCollection","ngModel","$modelValue","_refreshDelayPromise","getItemIndex","itemScope","isActive","toggleChoice","itemIndex","isDisabled","_uiSelectChoiceDisabled","$event","type","trim","skipAdd","locals","keyword","promise","onSelectCallback","$keyword","$item","$model","modelMapper","then","sizeSearchInput","$setTouched","onMouseEnter","setFocus","focusInput","clear","stopPropagation","toggle","prevActiveIndex","isLocked","_uiSelectChoiceLocked","sizeWatch","input","calculateContainerWidth","clientWidth","offsetParent","updateIfVisible","containerWidth","inputWidth","offsetLeft","css","str","split","$apply","tagged","interceptChoiceKeydownEvent","$parent","keyCode","shiftKey","triggerHandler","getData","originalEvent","target","$applyAsync","highlighted","posY","offsetTop","clientHeight","offsetHeight","$on","off","uisOffset","isDefined","controllerAs","match","exec","ngClass","combined","inputId","id","ctrls","_makeCustomEqualFunc","isEqualModelString","hasCustomEqual","isEqualModelCallback","other","isObject","equals","onDocumentClick","contains","jQuery","focusableControls","targetController","tagName","$digest","windowResizeHandler","_winResizeDelayPromise","resetDropdown","positionDropdown","offset","after","originalWidth","find","replaceWith","$el","baseTitle","title","focusserTitle","focusserId","onSelect","onRemoveCallback","onRemove","onCopyItemsCallback","onCopyItems","isEqualModel","isPrevActiveCallback","isPrevActive","limit","parseInt","choiceGrouped","tabindex","taggingEval","taggingInvalidEval","interceptMatchKeydownEvent","autofocus","focusOn","transcluded","transcludedMatch","transcludedChoices","transcludedHeader","remove","transcludedFooter","isOpen","dropdown","directionUpClassName","setDropdownPosUp","offsetDropdown","setDropdownPosDown","removeClass","uiSelectDragFactory","isAllowDrop","dataTransfer","substr","DRAG_DATA_PREFIX","_getDragIndexes","targetIndex","$selectMultiple","activeMatchIndexes","_getDragImage","drag_icon","className","right","padding","color","zIndex","_getOffset","layerX","_getMovedMatchIndex","dragoverItemIndex","isCurrentDragging","DRAGGABLE_ITEM_CLASS","DROPPABLE_CLASS","DROPPABLE_IN_ITEM_CLASS","DRAGGING_CLASS","DRAGOVER_LEFT","DRAGOVER_RIGHT","getActiveItems","$","idDragging","dropComplete","currentElement","classList","add","effectAllowed","JSON","stringify","currentTarget","removeChoice","offsetWidth","dropEffect","multi","setAllowClear","allow","allowClear","uiLockChoice","isPressShiftKey","isPressCtrlKey","updateModel","$setViewValue","refreshComponent","indexes","removedChoice","skipRemove","getPlaceholder","onKeydownEditInput","trigger","editItem","idx","Array","splice","isActiveIndex","pushActiveMatchIndex","toggleMatchIndex","isInvalid","activeItem","min","activeItemInRange","start","end","_getCaretPosition","_handleMatchSelection","getNewActiveMatchIndex","isMultiActive","curr","prev","last","next","newIndex","first","_selectAll","_selectLast","caretPosition","searchLength","_findCaseInsensitiveDupe","arr","hasDupe","origItem","toUpperCase","_findApproxDupe","haystack","needle","dupeIndex","tempArr","mockObj","isTag","_copySelection","$items","_toggleKeyPress","_onDocumentKeydown","_onDocumentClick","$isEmpty","viewValueCache","modelValueCache","$parsers","unshift","resultMultiple","$formatters","inputValue","checkFnMultiple","p","trackByExp","propsItemNameMatches","oldValue","$render","$viewValue","dupIndex","selection","tagItems","tagItem","stashArr","hasTag","checkFnSingle","d","val","callback","debounceTime","timeoutPromise","self","args","openFlagParse","uisOpen","onOpenCloseCallback","uisOpenClose","previousState","expression","filterMatch","grouped","run","$templateCache","put"],"mappings":"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","file":"select.min.js","sourcesContent":["/*!\n * ui-select\n * http://github.com/angular-ui/ui-select\n * Version: 0.16.1 - 2018-11-13T07:30:50.661Z\n * License: MIT\n */\n\n\n(function () { \n\"use strict\";\n\nvar isMacOS = /\\bMac OS\\b/.test(window.navigator.userAgent);\nvar KEY = {\n    TAB: 9,\n    ENTER: 13,\n    ESC: 27,\n    SPACE: 32,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    SHIFT: 16,\n    CTRL: 17,\n    ALT: 18,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    HOME: 36,\n    END: 35,\n    BACKSPACE: 8,\n    DELETE: 46,\n    COMMAND: 91,\n    A: 65,\n    C: 67,\n\n    MAP: { 91 : \"COMMAND\", 8 : \"BACKSPACE\" , 9 : \"TAB\" , 13 : \"ENTER\" , 16 : \"SHIFT\" , 17 : \"CTRL\" , 18 : \"ALT\" , 19 : \"PAUSEBREAK\" , 20 : \"CAPSLOCK\" , 27 : \"ESC\" , 32 : \"SPACE\" , 33 : \"PAGE_UP\", 34 : \"PAGE_DOWN\" , 35 : \"END\" , 36 : \"HOME\" , 37 : \"LEFT\" , 38 : \"UP\" , 39 : \"RIGHT\" , 40 : \"DOWN\" , 43 : \"+\" , 44 : \"PRINTSCREEN\" , 45 : \"INSERT\" , 46 : \"DELETE\", 48 : \"0\" , 49 : \"1\" , 50 : \"2\" , 51 : \"3\" , 52 : \"4\" , 53 : \"5\" , 54 : \"6\" , 55 : \"7\" , 56 : \"8\" , 57 : \"9\" , 59 : \";\", 61 : \"=\" , 65 : \"A\" , 66 : \"B\" , 67 : \"C\" , 68 : \"D\" , 69 : \"E\" , 70 : \"F\" , 71 : \"G\" , 72 : \"H\" , 73 : \"I\" , 74 : \"J\" , 75 : \"K\" , 76 : \"L\", 77 : \"M\" , 78 : \"N\" , 79 : \"O\" , 80 : \"P\" , 81 : \"Q\" , 82 : \"R\" , 83 : \"S\" , 84 : \"T\" , 85 : \"U\" , 86 : \"V\" , 87 : \"W\" , 88 : \"X\" , 89 : \"Y\" , 90 : \"Z\", 96 : \"0\" , 97 : \"1\" , 98 : \"2\" , 99 : \"3\" , 100 : \"4\" , 101 : \"5\" , 102 : \"6\" , 103 : \"7\" , 104 : \"8\" , 105 : \"9\", 106 : \"*\" , 107 : \"+\" , 109 : \"-\" , 110 : \".\" , 111 : \"/\", 112 : \"F1\" , 113 : \"F2\" , 114 : \"F3\" , 115 : \"F4\" , 116 : \"F5\" , 117 : \"F6\" , 118 : \"F7\" , 119 : \"F8\" , 120 : \"F9\" , 121 : \"F10\" , 122 : \"F11\" , 123 : \"F12\", 144 : \"NUMLOCK\" , 145 : \"SCROLLLOCK\" , 186 : \";\" , 187 : \"=\" , 188 : \",\" , 189 : \"-\" , 190 : \".\" , 191 : \"/\" , 192 : \"`\" , 219 : \"[\" , 220 : \"\\\\\" , 221 : \"]\" , 222 : \"'\"\n    },\n\n    isControl: function (e) {\n        var k = e.which;\n        switch (k) {\n        case KEY.COMMAND:\n        case KEY.SHIFT:\n        case KEY.CTRL:\n        case KEY.ALT:\n            return true;\n        }\n\n        if (e.metaKey || e.ctrlKey || e.altKey) return true;\n\n        return false;\n    },\n    isFunctionKey: function (k) {\n        k = k.which ? k.which : k;\n        return k >= 112 && k <= 123;\n    },\n    isVerticalMovement: function (k){\n      return ~[KEY.UP, KEY.DOWN].indexOf(k);\n    },\n    isAllowControlKey: function (k){\n      return ~[KEY.LEFT,KEY.RIGHT,KEY.BACKSPACE,KEY.DELETE].indexOf(k);\n    },\n    isSelectAll: function (event, k) {\n      return this.isPressedCtrlKey(event) && k === KEY.A;\n    },\n    isCopy: function (event, k) {\n      return this.isPressedCtrlKey(event) && k === KEY.C;\n    },\n    isPressedCtrlKey: function (event) {\n      return isMacOS ? event.metaKey : event.ctrlKey;\n    },\n    toSeparator: function (k) {\n      var sep = {ENTER:\"\\n\",TAB:\"\\t\",SPACE:\" \"}[k];\n      if (sep) return sep;\n      // return undefined for special keys other than enter, tab or space.\n      // no way to use them to cut strings.\n      return KEY[k] ? undefined : k;\n    }\n  };\n\n//https://stackoverflow.com/questions/400212/how-do-i-copy-to-the-clipboard-in-javascript\nvar UTIL = {\n  copyToClipboard: function(text) {\n    if (window.clipboardData && window.clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      return clipboardData.setData(\"Text\", text);\n\n    } else if (document.queryCommandSupported && document.queryCommandSupported(\"copy\")) {\n      var textarea = document.createElement(\"textarea\");\n      textarea.textContent = text;\n      textarea.style.position = \"fixed\";  // Prevent scrolling to bottom of page in MS Edge.\n      document.body.appendChild(textarea);\n      textarea.select();\n      try {\n        return document.execCommand(\"copy\");  // Security exception may be thrown by some browsers.\n      } catch (ex) {\n        return false;\n      } finally {\n        document.body.removeChild(textarea);\n      }\n    }\n  }\n};\n\n/**\n * Add querySelectorAll() to jqLite.\n *\n * jqLite find() is limited to lookups by tag name.\n * TODO This will change with future versions of AngularJS, to be removed when this happens\n *\n * See jqLite.find - why not use querySelectorAll? https://github.com/angular/angular.js/issues/3586\n * See feat(jqLite): use querySelectorAll instead of getElementsByTagName in jqLite.find https://github.com/angular/angular.js/pull/3598\n */\nif (angular.element.prototype.querySelectorAll === undefined) {\n  angular.element.prototype.querySelectorAll = function(selector) {\n    return angular.element(this[0].querySelectorAll(selector));\n  };\n}\n\n/**\n * Add closest() to jqLite.\n */\nif (angular.element.prototype.closest === undefined) {\n  angular.element.prototype.closest = function( selector) {\n    var elem = this[0];\n    var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector;\n\n    while (elem) {\n      if (matchesSelector.bind(elem)(selector)) {\n        return elem;\n      } else {\n        elem = elem.parentElement;\n      }\n    }\n    return false;\n  };\n}\n\nvar latestId = 0;\n\nvar uis = angular.module('ui.select', [])\n\n.constant('uiSelectConfig', {\n  theme: 'bootstrap',\n  searchEnabled: true,\n  sortable: false,\n  placeholder: '', // Empty by default, like HTML tag <select>\n  refreshDelay: 1000, // In milliseconds\n  closeOnSelect: true,\n  skipFocusser: false,\n  dropdownPosition: 'auto',\n  generateId: function() {\n    return latestId++;\n  },\n  appendToBody: false\n})\n\n// See Rename minErr and make it accessible from outside https://github.com/angular/angular.js/issues/6913\n.service('uiSelectMinErr', function() {\n  var minErr = angular.$$minErr('ui.select');\n  return function() {\n    var error = minErr.apply(this, arguments);\n    var message = error.message.replace(new RegExp('\\nhttp://errors.angularjs.org/.*'), '');\n    return new Error(message);\n  };\n})\n\n// Recreates old behavior of ng-transclude. Used internally.\n.directive('uisTranscludeAppend', function () {\n  return {\n    link: function (scope, element, attrs, ctrl, transclude) {\n        transclude(scope, function (clone) {\n          element.append(clone);\n          element.removeAttr('uis-transclude-append');\n        }, null, attrs.uisTranscludeAppend);\n      }\n    };\n})\n\n/**\n * Highlights text that matches $select.search.\n *\n * Taken from AngularUI Bootstrap Typeahead\n * See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L340\n */\n.filter('highlight', function() {\n  function escapeRegexp(queryToEscape) {\n    return ('' + queryToEscape).replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n\n  return function(matchItem, query) {\n    return query && matchItem ? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<span class=\"ui-select-highlight\">$&</span>') : matchItem;\n  };\n})\n\n/**\n * A read-only equivalent of jQuery's offset function: http://api.jquery.com/offset/\n *\n * Taken from AngularUI Bootstrap Position:\n * See https://github.com/angular-ui/bootstrap/blob/master/src/position/position.js#L70\n */\n.factory('uisOffset',\n  ['$document', '$window',\n  function ($document, $window) {\n\n  return function(element) {\n    var boundingClientRect = element[0].getBoundingClientRect();\n    return {\n      width: boundingClientRect.width || element.prop('offsetWidth'),\n      height: boundingClientRect.height || element.prop('offsetHeight'),\n      top: boundingClientRect.top + ($window.pageYOffset || $document[0].documentElement.scrollTop),\n      left: boundingClientRect.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft)\n    };\n  };\n}]);\n\n//TODO: 현재는 IE에서 Dragimage 설정 불가\nwindow.setDragImageIEPreload = function(image) {\n  var bodyEl,\n    preloadEl;\n\n  bodyEl = document.body;\n\n  // create the element that preloads the  image\n  preloadEl = document.createElement('div');\n  preloadEl.style.background = 'url(\"' + image.src + '\")';\n  preloadEl.style.position = 'absolute';\n  preloadEl.style.opacity = 0.001;\n\n  bodyEl.appendChild(preloadEl);\n\n  // after it has been preloaded, just remove the element so it won't stay forever in the DOM\n  setTimeout(function() {\n    bodyEl.removeChild(preloadEl);\n  }, 5000);\n};\n\n// if the setDragImage is not available, implement it\nif ('function' !== typeof DataTransfer.prototype.setDragImage) {\n  DataTransfer.prototype.setDragImage = function(image, offsetX, offsetY) {\n    var randomDraggingClassName,\n      dragStylesCSS,\n      dragStylesEl,\n      headEl,\n      parentFn,\n      eventTarget;\n\n    // generate a random class name that will be added to the element\n    randomDraggingClassName = 'setdragimage-ie-dragging-' + Math.round(Math.random() * Math.pow(10, 5)) + '-' + Date.now();\n\n    // prepare the rules for the random class\n    dragStylesCSS = [\n      '.' + randomDraggingClassName,\n      '{',\n      'background: url(\"' + image.src + '\") no-repeat #fff 0 0 !important;',\n      'width: ' + image.width + 'px !important;',\n      'height: ' + image.height + 'px !important;',\n      'text-indent: -9999px !important;',\n      'border: 0 !important;',\n      'outline: 0 !important;',\n      '}',\n      '.' + randomDraggingClassName + ' * {',\n      'display: none !important;',\n      '}'\n    ];\n    // create the element and add it to the head of the page\n    dragStylesEl = document.createElement('style');\n    dragStylesEl.innerText = dragStylesCSS.join('');\n    headEl = document.getElementsByTagName('head')[0];\n    headEl.appendChild(dragStylesEl);\n\n    //TODO: strict 모드에서 caller호출 불가로 인해 주석처리\n    /*\n\tsince we can't get the target element over which the drag start event occurred\n\t(because the `this` represents the DataTransfer object and not the element),\n\twe will walk through the parents of the current functions until we find one\n\twhose first argument is a drag event\n\t */\n    // parentFn = DataTransfer.prototype.setDragImage.caller;\n    // while (!(parentFn.arguments[0] instanceof DragEvent)) {\n    //     parentFn = parentFn.caller;\n    // }\n    //\n    // // then, we get the target element from the event (event.target)\n    // eventTarget = parentFn.arguments[0].target;\n    // // and add the class we prepared to it\n    // eventTarget.classList.add(randomDraggingClassName);\n    //\n    // /* immediately after adding the class, we remove it. in this way the browser will\n    // have time to make a snapshot and use it just so it looks like the drag element */\n    // setTimeout(function() {\n    //     // remove the styles\n    //     headEl.removeChild(dragStylesEl);\n    //     // remove the class\n    //     eventTarget.classList.remove(randomDraggingClassName);\n    // }, 0);\n  };\n}\n\nuis.directive('uiSelectChoices', ['uiSelectConfig', 'uisRepeatParser', 'uiSelectMinErr', '$compile', '$timeout', '$window',\n  function (uiSelectConfig, RepeatParser, uiSelectMinErr, $compile, $timeout, $window) {\n\n    return {\n      restrict: 'EA',\n      require: '^uiSelect',\n      replace: true,\n      transclude: {\n        tabWrapper: '?translcludeTab'\n      },\n      templateUrl: function (tElement, attrs) {\n        // Needed so the uiSelect can detect the transcluded content\n        tElement.addClass('ui-select-choices');\n\n        // Gets theme attribute from parent (ui-select)\n        var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n        return attrs.templateUrl || theme + '/choices.tpl.html';\n      },\n\n      compile: function (tElement, tAttrs) {\n\n        if (!tAttrs.repeat) throw uiSelectMinErr('repeat', \"Expected 'repeat' expression.\");\n\n        return function link(scope, element, attrs, $select, transcludeFn) {\n\n          // var repeat = RepeatParser.parse(attrs.repeat);\n          var groupByExp = attrs.groupBy;\n          var groupFilterExp = attrs.groupFilter;\n\n          $select.parseRepeatAttr(attrs.repeat, groupByExp, groupFilterExp); //Result ready at $select.parserResult\n\n          $select.disableChoiceExpression = attrs.uiDisableChoice;\n          $select.onHighlightCallback = attrs.onHighlight;\n\n          $select.dropdownPosition = attrs.position ? attrs.position.toLowerCase() : uiSelectConfig.dropdownPosition;\n          $select.refreshAttr = attrs.refresh;\n\n          if (groupByExp) {\n            var groups = element.querySelectorAll('.ui-select-choices-group');\n            if (groups.length !== 1) throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-group but got '{0}'.\", groups.length);\n            groups.attr('ng-repeat', RepeatParser.getGroupNgRepeatExpression());\n          }\n\n          var choices = element.querySelectorAll('.ui-select-choices-row');\n          if (choices.length !== 1) {\n            throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row but got '{0}'.\", choices.length);\n          }\n\n          choices.attr('ng-repeat', $select.parserResult.repeatExpression(groupByExp))\n            .attr('ng-if', '$select.open'); //Prevent unnecessary watches when dropdown is closed\n          if ($window.document.addEventListener) {  //crude way to exclude IE8, specifically, which also cannot capture events\n            // grouping에서 오동작을 막기위해 itemIndex를 activeIndex로 설정\n            choices\n              .attr('ng-click', '$select.activeIndex=itemIndex;$select.select(' + $select.parserResult.itemName + ',{skipFocusser: $select.skipFocusser, $event: $event})')\n              .attr('ng-init', 'itemIndex=$select.getItemIndex(this)')\n              .attr('id', 'ui-select-choices-row-' + $select.generatedId + '-{{itemIndex}}');\n            !$select.multiple && choices.attr('ng-mouseenter', '$select.onMouseEnter(itemIndex)');\n\n            choices.children().attr('ng-class', '{\\'prev-selected\\': $select.isPrevActive(itemIndex, ' + $select.parserResult.itemName + ')}');\n          }\n\n          var rowsInner = element.querySelectorAll('.ui-select-choices-row-inner');\n          if (rowsInner.length !== 1) throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row-inner but got '{0}'.\", rowsInner.length);\n          rowsInner.attr('uis-transclude-append', ''); //Adding uisTranscludeAppend directive to row element after choices element has ngRepeat\n          if (!$window.document.addEventListener) {  //crude way to target IE8, specifically, which also cannot capture events - so event bindings must be here\n            // grouping에서 오동작을 막기위해 itemIndex를 activeIndex로 설정\n            rowsInner\n              .attr('ng-click', '$select.activeIndex=itemIndex;$select.select(' + $select.parserResult.itemName + ',{skipFocusser: $select.skipFocusser, $event: $event})')\n              .attr('ng-init', 'itemIndex=$select.getItemIndex(this)')\n              .attr('id', 'ui-select-choices-row-' + $select.generatedId + '-{{itemIndex}}');\n            !$select.multiple && rowsInner.attr('ng-mouseenter', '$select.onMouseEnter(itemIndex)');\n            rowsInner.children().attr('ng-class', '{\\'prev-selected\\': $select.isPrevActive(itemIndex, ' + $select.parserResult.itemName + ')}');\n          }\n\n\n          $compile(element, transcludeFn)(scope); //Passing current transcludeFn to be able to append elements correctly from uisTranscludeAppend\n\n\n          //왜삭제?\n          // scope.$on('$destroy', function () {\n          //   choices.remove();\n          // });\n\n          var timer;\n          scope.$watch('$select.search', function (newValue) {\n            if (newValue && !$select.open && $select.multiple) $select.activate(false, true);\n            // $select.activeIndex = $select.tagging.isActivated ? -1 : 0;\n            $select.activeIndex = ($select.multiple && !newValue) ? -1 : 0;\n            $timeout.cancel(timer);\n            timer = $timeout(function () {\n              $select.ensureHighlightVisible();\n            }, 200, false);\n            if (!attrs.minimumInputLength || $select.search.length >= attrs.minimumInputLength) {\n              $select.refresh(attrs.refresh);\n            } else {\n              $select.items = [];\n            }\n          });\n\n          attrs.$observe('refreshDelay', function () {\n            // $eval() is needed otherwise we get a string instead of a number\n            var refreshDelay = scope.$eval(attrs.refreshDelay);\n            $select.refreshDelay = refreshDelay !== undefined ? refreshDelay : uiSelectConfig.refreshDelay;\n          });\n        };\n      }\n    };\n  }]);\n\n/**\n * Contains ui-select \"intelligence\".\n *\n * The goal is to limit dependency on the DOM whenever possible and\n * put as much logic in the controller (instead of the link functions) as possible so it can be easily tested.\n */\nuis.controller('uiSelectCtrl',\n  ['$scope', '$element', '$timeout', '$filter', '$$uisDebounce', 'uisRepeatParser', 'uiSelectMinErr', 'uiSelectConfig', '$parse', '$injector', '$window',\n  function($scope, $element, $timeout, $filter, $$uisDebounce, RepeatParser, uiSelectMinErr, uiSelectConfig, $parse, $injector, $window) {\n\n  var ctrl = this;\n\n  var EMPTY_SEARCH = '';\n\n  ctrl.placeholder = uiSelectConfig.placeholder;\n  ctrl.searchEnabled = uiSelectConfig.searchEnabled;\n  ctrl.sortable = uiSelectConfig.sortable;\n  ctrl.refreshDelay = uiSelectConfig.refreshDelay;\n  ctrl.paste = uiSelectConfig.paste;\n\n  ctrl.removeSelected = false; //If selected item(s) should be removed from dropdown list\n  ctrl.closeOnSelect = true; //Initialized inside uiSelect directive link function\n  ctrl.skipFocusser = false; //Set to true to avoid returning focus to ctrl when item is selected\n  ctrl.search = EMPTY_SEARCH;\n\n  ctrl.activeIndex = 0; //Dropdown of choices\n  ctrl.items = []; //All available choices\n\n  ctrl.open = false;\n  ctrl.focus = false;\n  ctrl.disabled = false;\n  ctrl.selected = undefined;\n\n  ctrl.dropdownPosition = 'auto';\n\n  ctrl.focusser = undefined; //Reference to input element used to handle focus events\n  ctrl.resetSearchInput = true;\n  ctrl.multiple = undefined; // Initialized inside uiSelect directive link function\n  ctrl.disableChoiceExpression = undefined; // Initialized inside uiSelectChoices directive link function\n  ctrl.resetOnEsc = false; // 어떤 상태여도 ESC를 누르면 검색어가 사라짐\n  ctrl.tagging = {isActivated: false, fct: undefined};\n  ctrl.taggingInvalid = {isActivated: false, value: undefined};\n  ctrl.taggingTokens = {isActivated: false, tokens: undefined};\n  ctrl.lockChoiceExpression = undefined; // Initialized inside uiSelectMatch directive link function\n  ctrl.clickTriggeredSelect = false;\n  ctrl.$filter = $filter;\n\n  // Use $injector to check for $animate and store a reference to it\n  ctrl.$animate = (function () {\n    try {\n      return $injector.get('$animate');\n    } catch (err) {\n      // $animate does not exist\n      return null;\n    }\n  })();\n\n  ctrl.searchInput = $element.querySelectorAll('input.ui-select-search');\n  if (ctrl.searchInput.length !== 1) {\n    throw uiSelectMinErr('searchInput', \"Expected 1 input.ui-select-search but got '{0}'.\", ctrl.searchInput.length);\n  }\n\n  ctrl.isEmpty = function() {\n    return angular.isUndefined(ctrl.selected) || ctrl.selected === null || ctrl.selected === '' || (ctrl.multiple && ctrl.selected.length === 0);\n  };\n\n  function _findIndex(collection, predicate, thisArg){\n    if (collection.findIndex){\n      return collection.findIndex(predicate, thisArg);\n    } else {\n      var list = Object(collection);\n      var length = list.length >>> 0;\n      var value;\n\n      for (var i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  }\n\n  // Most of the time the user does not want to empty the search input when in typeahead mode\n  function _resetSearchInput(skipSelect) {\n    if (ctrl.resetSearchInput || (ctrl.resetSearchInput === undefined && uiSelectConfig.resetSearchInput)) {\n      if (!skipSelect && ctrl.multiple && ctrl.tagging.isActivated && ctrl.search !== EMPTY_SEARCH) {\n        var newItem = ctrl.parseStringToTagMap(ctrl.search);\n        ctrl.search = EMPTY_SEARCH;\n        ctrl.activeIndex = 0; // 선택이 안되는 버그 수정 패치코드\n        // select안에 _resetSearchInput을 호출하는 로직이 있어서 무한루프에 빠지지 않기위해 수정\n        ctrl.select(newItem);\n        return;\n      }\n      ctrl.search = EMPTY_SEARCH;\n      //reset activeIndex\n      if (ctrl.selected && ctrl.items && ctrl.items.length && !ctrl.multiple) {\n        ctrl.activeIndex = _findIndex(ctrl.items, function(item){\n          return ctrl.isEqual(this, item);\n        }, ctrl.selected);\n      }\n    }\n  }\n\n    function _groupsFilter(groups, groupNames) {\n      var i, j, result = [];\n      for(i = 0; i < groupNames.length ;i++){\n        for(j = 0; j < groups.length ;j++){\n          if(groups[j].name == [groupNames[i]]){\n            result.push(groups[j]);\n          }\n        }\n      }\n      return result;\n    }\n\n  // When the user clicks on ui-select, displays the dropdown list\n  ctrl.activate = function(initSearchValue, avoidReset) {\n    if (!ctrl.disabled  && !ctrl.open) {\n      if(!avoidReset) _resetSearchInput();\n      ctrl.refresh(ctrl.refreshAttr);\n      $scope.$broadcast('uis:activate');\n\n      ctrl.open = true;\n\n      ctrl.activeIndex = (ctrl.multiple && !ctrl.search) ? -1 : ctrl.activeIndex;\n      ctrl.activeIndex = ctrl.activeIndex >= ctrl.items.length ? 0 : ctrl.activeIndex;\n\n      // ensure that the index is set to zero for tagging variants\n      // that where first option is auto-selected\n      if ( ctrl.activeIndex === -1 && ctrl.taggingLabel !== false ) {\n        ctrl.activeIndex = 0;\n      }\n\n      var container = $element.querySelectorAll('.ui-select-choices-content');\n      if (ctrl.$animate && ctrl.$animate.on && ctrl.$animate.enabled(container[0])) {\n        ctrl.$animate.on('enter', container[0], function (elem, phase) {\n          if (phase === 'close') {\n            // Only focus input after the animation has finished\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            }, 0, false);\n          }\n        });\n      } else {\n        $timeout(function () {\n          ctrl.focusSearchInput(initSearchValue);\n          if(!ctrl.tagging.isActivated && ctrl.items.length > 1) {\n            ctrl.ensureHighlightVisible();\n          }\n        }, 0, false);\n      }\n      // var searchInput = $element.querySelectorAll('.ui-select-search');\n      // if (ctrl.$animate && ctrl.$animate.enabled(container[0])) {\n      //   var animateHandler = function(elem, phase) {\n      //     if (phase === 'start' && ctrl.items.length === 0) {\n      //       // Only focus input after the animation has finished\n      //       ctrl.$animate.off('removeClass', searchInput[0], animateHandler);\n      //       $timeout(function () {\n      //         ctrl.focusSearchInput(initSearchValue);\n      //       });\n      //     } else if (phase === 'close') {\n      //       // Only focus input after the animation has finished\n      //       ctrl.$animate.off('enter', container[0], animateHandler);\n      //       $timeout(function () {\n      //         ctrl.focusSearchInput(initSearchValue);\n      //       });\n      //     }\n      //   };\n      //\n      //   if (ctrl.items.length > 0) {\n      //     ctrl.$animate.on('enter', container[0], animateHandler);\n      //   } else {\n      //     ctrl.$animate.on('removeClass', searchInput[0], animateHandler);\n      //   }\n      // } else {\n      //   $timeout(function () {\n      //     ctrl.focusSearchInput(initSearchValue);\n      //     if(!ctrl.tagging.isActivated && ctrl.items.length > 1) {\n      //       ctrl.ensureHighlightVisible();\n      //     }\n      //   }, 0, false);\n      // }\n    }\n  };\n\n  ctrl.focusSearchInput = function (initSearchValue) {\n    ctrl.search = initSearchValue || ctrl.search;\n    ctrl.searchInput[0].focus();\n  };\n\n  ctrl.findGroupByName = function(name) {\n    return ctrl.groups && ctrl.groups.filter(function(group) {\n      return group.name === name;\n    })[0];\n  };\n\n  ctrl.parseRepeatAttr = function(repeatAttr, groupByExp, groupFilterExp) {\n    function updateGroups(items) {\n      var groupFn = $scope.$eval(groupByExp);\n      ctrl.groups = [];\n      angular.forEach(items, function(item) {\n        var groupName = angular.isFunction(groupFn) ? groupFn(item) : item[groupFn];\n        var group = ctrl.findGroupByName(groupName);\n        if(group) {\n          group.items.push(item);\n        }\n        else {\n          ctrl.groups.push({name: groupName, items: [item]});\n        }\n      });\n      if(groupFilterExp){\n        var groupFilterFn = $scope.$eval(groupFilterExp);\n        if( angular.isFunction(groupFilterFn)){\n          ctrl.groups = groupFilterFn(ctrl.groups);\n        } else if(angular.isArray(groupFilterFn)){\n          ctrl.groups = _groupsFilter(ctrl.groups, groupFilterFn);\n        }\n      }\n      ctrl.items = [];\n      ctrl.groups.forEach(function(group) {\n        ctrl.items = ctrl.items.concat(group.items);\n      });\n    }\n\n    function setPlainItems(items) {\n      ctrl.items = items;\n    }\n\n    ctrl.setItemsFn = groupByExp ? updateGroups : setPlainItems;\n\n    ctrl.parserResult = RepeatParser.parse(repeatAttr);\n\n    ctrl.isGrouped = !!groupByExp;\n    ctrl.itemProperty = ctrl.parserResult.itemName;\n\n    //If collection is an Object, convert it to Array\n\n    var originalSource = ctrl.parserResult.source;\n\n    //When an object is used as source, we better create an array and use it as 'source'\n    var createArrayFromObject = function(){\n      var origSrc = originalSource($scope);\n      $scope.$uisSource = Object.keys(origSrc).map(function(v){\n        var result = {};\n        result[ctrl.parserResult.keyName] = v;\n        result.value = origSrc[v];\n        return result;\n      });\n    };\n\n    if (ctrl.parserResult.keyName){ // Check for (key,value) syntax\n      createArrayFromObject();\n      ctrl.parserResult.source = $parse('$uisSource' + ctrl.parserResult.filters);\n      $scope.$watch(originalSource, function(newVal, oldVal){\n        if (newVal !== oldVal) createArrayFromObject();\n      }, true);\n    }\n\n    // ctrl.refreshItems = function (data){\n    //   data = data || ctrl.parserResult.source($scope);\n    //   var selectedItems = ctrl.selected;\n    //   //TODO should implement for single mode removeSelected\n    //   if (ctrl.isEmpty() || (angular.isArray(selectedItems) && !selectedItems.length) || !ctrl.removeSelected) {\n    //     ctrl.setItemsFn(data);\n    //   }else{\n    //     if ( data !== undefined ) {\n    //       var filteredItems = data.filter(function(i) {\n    //         return selectedItems.every(function(selectedItem) {\n    //           return !angular.equals(i, selectedItem);\n    //         });\n    //       });\n    //       ctrl.setItemsFn(filteredItems);\n    //     }\n    //   }\n    //   if (ctrl.dropdownPosition === 'auto' || ctrl.dropdownPosition === 'up'){\n    //     $scope.calculateDropdownPos();\n    //   }\n    // };\n\n    ctrl.refreshItems = function (data, callbackData){\n      data = data || ctrl.parserResult.source($scope);\n      callbackData = callbackData || angular.noop;\n      data = callbackData(data) || data;\n      ctrl.setItemsFn(data);\n      if (ctrl.dropdownPosition === 'auto' || ctrl.dropdownPosition === 'up'){\n        $scope.calculateDropdownPos();\n      }\n    };\n\n    // See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L259\n    $scope.$watchCollection(ctrl.parserResult.source, function(items) {\n      if (items === undefined || items === null) {\n        // If the user specifies undefined or null => reset the collection\n        // Special case: items can be undefined if the user did not initialized the collection on the scope\n        // i.e $scope.addresses = [] is missing\n        ctrl.items = [];\n      } else {\n        if (!angular.isArray(items)) {\n          throw uiSelectMinErr('items', \"Expected an array but got '{0}'.\", items);\n        } else {\n          //Remove already selected items (ex: while searching)\n          //TODO Should add a test\n          ctrl.refreshItems(items);\n          ctrl.ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n        }\n      }\n    });\n\n  };\n\n  var _refreshDelayPromise;\n\n  /**\n   * Typeahead mode: lets the user refresh the collection using his own function.\n   *\n   * See Expose $select.search for external / remote filtering https://github.com/angular-ui/ui-select/pull/31\n   */\n  ctrl.refresh = function(refreshAttr) {\n    if (refreshAttr !== undefined) {\n\n      // Debounce\n      // See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L155\n      // FYI AngularStrap typeahead does not have debouncing: https://github.com/mgcrea/angular-strap/blob/v2.0.0-rc.4/src/typeahead/typeahead.js#L177\n      if (_refreshDelayPromise) {\n        $timeout.cancel(_refreshDelayPromise);\n      }\n      _refreshDelayPromise = $timeout(function() {\n        $scope.$eval(refreshAttr);\n      }, ctrl.refreshDelay);\n    }\n  };\n\n  ctrl.getItemIndex = function (itemScope) {\n    if (!ctrl.open) {\n      return false;\n    }\n    return ctrl.items.indexOf(itemScope[ctrl.itemProperty]);\n  };\n\n  ctrl.isActive = function(itemScope) {\n    if ( !ctrl.open || ctrl.toggleChoice ) {\n      return false;\n    }\n    var itemIndex = ctrl.items.indexOf(itemScope[ctrl.itemProperty]);\n    var isActive =  itemIndex == ctrl.activeIndex;\n\n    if ( !isActive || ( itemIndex < 0 && ctrl.taggingLabel !== false ) ||( itemIndex < 0 && ctrl.taggingLabel === false) ) {\n      return false;\n    }\n\n    if (isActive && !angular.isUndefined(ctrl.onHighlightCallback)) {\n      itemScope.$eval(ctrl.onHighlightCallback);\n    }\n\n    return isActive;\n  };\n\n  ctrl.isDisabled = function(itemScope) {\n\n    if (!ctrl.open) return;\n\n    var itemIndex = ctrl.items.indexOf(itemScope[ctrl.itemProperty]);\n    var isDisabled = false;\n    var item;\n\n    if (itemIndex >= 0 && !angular.isUndefined(ctrl.disableChoiceExpression)) {\n      item = ctrl.items[itemIndex];\n      isDisabled = !!(itemScope.$eval(ctrl.disableChoiceExpression)); // force the boolean value\n      item._uiSelectChoiceDisabled = isDisabled; // store this for later reference\n    }\n\n    return isDisabled;\n  };\n\n  function _selectArrayItem(itemList, option) {\n    angular.forEach(itemList, function (item, index) {\n      var _option = angular.copy(option);\n      if(angular.isNumber(option.index)) {\n        if(angular.isNumber(option.smallerIndexNum)) {\n          _option.index = index < option.smallerIndexNum ? Math.max(option.index - 1, 0): option.index;\n        } else {\n          _option.index = option.index + index;\n        }\n      }\n      item && ctrl.select(item, _option);\n    });\n  }\n\n\n    // When the user selects an item with ENTER or clicks the dropdown\n    //option = {skipFocusser, $event, skipBroadcast}\n    // skipFocusser: search창이 닫힌 후에 focusser에 focus를 하지 않음\n    // $event: select를 trigger한 event\n    // skipAdd: 추가 관련 broadcast를 수행하지 않음(수행시 selected가 변하지 않음)\n  ctrl.select = function(item, option) {\n    option = option || {};\n    if (angular.isArray(item)) {\n      _selectArrayItem(item, option);\n      return;\n    }\n    if (item === undefined || !item._uiSelectChoiceDisabled) {\n\n      if ( ! ctrl.items && ! ctrl.search && ! ctrl.tagging.isActivated) return;\n\n      if (!item || !item._uiSelectChoiceDisabled) {\n        if(ctrl.tagging.isActivated) {\n          // if taggingLabel is disabled, we pull from ctrl.search val\n          if ( ctrl.taggingLabel === false ) {\n            //TODO: tagging이 false일 때 예외처리 필요. activeIndex의 최소값은 0 (항상 select가 되도록), 없으면 노출 X\n            //클릭이벤트인지도 판단할 수 있도록 해야함.\n            if ( ctrl.activeIndex < 0 ) {\n              item = ctrl.tagging.fct !== undefined ? ctrl.tagging.fct(ctrl.search) : ctrl.search;\n              if (angular.isArray(item)) {\n                _selectArrayItem(item, option);\n                return;\n              } else if (!item || ctrl.isEqual( ctrl.items[0], item ) ) {\n                return;\n              }\n            } else if (!item) {\n              return;\n            } else if (option.$event && option.$event.type === 'click') { //TODO: click일 경우 예외처리\n              // keyboard nav happened first, user selected from dropdown\n              //item = ctrl.items[ctrl.activeIndex];\n            }\n          } else {\n            // tagging always operates at index zero, taggingLabel === false pushes\n            // the ctrl.search value without having it injected\n            if ( ctrl.activeIndex === 0 ) {\n              // ctrl.tagging pushes items to ctrl.items, so we only have empty val\n              // for `item` if it is a detected duplicate\n              if ( item === undefined ) return;\n\n              // create new item on the fly if we don't already have one;\n              // use tagging function if we have one\n              if ( ctrl.tagging.fct !== undefined && typeof item === 'string' ) {\n                item = ctrl.tagging.fct(item);\n                if (angular.isArray(item)) {\n                  _selectArrayItem(item, option);\n                  return;\n                } else if (!item) return;\n              // if item type is 'string', apply the tagging label\n              } else if ( typeof item === 'string' ) {\n                // trim the trailing space\n                item = item.replace(ctrl.taggingLabel,'').trim();\n              }\n            }\n          }\n        }\n\n        !option.skipAdd && $scope.$broadcast('uis:select', item, option.index);\n\n        // TODO 검색을 위해 선택시에 keyword를 추가\n        var locals = {};\n        ctrl.keyword = ctrl.search;\n        locals[ctrl.parserResult.itemName] = item;\n\n        $timeout(function(){\n          var promise = ctrl.onSelectCallback($scope, {\n            $keyword: ctrl.keyword,\n            $item: item,\n            $model: ctrl.parserResult.modelMapper($scope, locals)\n          });\n\n          if(promise && typeof promise.then === 'function') {\n            promise.then(function () {\n              ctrl.sizeSearchInput();\n            });\n          }\n        }, 0, false);\n\n        if (ctrl.closeOnSelect) {\n          // select무한이 반복하는 현상 방어\n          ctrl.close({skipFocusser: option.skipFocusser, skipSelect: true});\n        }\n        if (option.$event && option.$event.type === 'click') {\n          ctrl.clickTriggeredSelect = true;\n        }\n      }\n    }\n  };\n\n    // Closes the dropdown\n    // option: skipFocusser, skipSelect, skipResetInput\n  ctrl.close = function(option) {\n    if (!ctrl.open) return;\n    option = option || {};\n    if (ctrl.ngModel && ctrl.ngModel.$setTouched) ctrl.ngModel.$setTouched();\n    !option.skipResetInput && _resetSearchInput(option.skipSelect);\n    ctrl.open = false;\n\n    $scope.$broadcast('uis:close', option.skipFocusser);\n\n  };\n\n  ctrl.onMouseEnter = function (itemIndex) {\n    if (!ctrl.keyDownMode) {\n      ctrl.activeIndex = itemIndex;\n    }\n  };\n\n  ctrl.setFocus = function(){\n    if (!ctrl.focus) ctrl.focusInput[0].focus();\n  };\n\n  ctrl.clear = function($event) {\n    ctrl.select(undefined);\n    $event.stopPropagation();\n    $timeout(function() {\n      ctrl.focusser[0].focus();\n    }, 0, false);\n  };\n\n  // Toggle dropdown\n  ctrl.toggle = function(e) {\n    if (ctrl.open) {\n      ctrl.close();\n      e.preventDefault();\n      e.stopPropagation();\n    } else {\n      _resetSearchInput();\n      ctrl.prevActiveIndex = ctrl.activeIndex;\n      ctrl.activate();\n    }\n  };\n\n  ctrl.isLocked = function(itemScope, itemIndex) {\n      var isLocked, item = ctrl.selected[itemIndex];\n\n      if (item && !angular.isUndefined(ctrl.lockChoiceExpression)) {\n          isLocked = !!(itemScope.$eval(ctrl.lockChoiceExpression)); // force the boolean value\n          item._uiSelectChoiceLocked = isLocked; // store this for later reference\n      }\n\n      return isLocked;\n  };\n\n  var sizeWatch = null;\n  ctrl.sizeSearchInput = function() {\n    if (!ctrl.multiple || ctrl.toggleChoice) {\n      return;\n    }\n\n    var input = ctrl.searchInput[0],\n        container = ctrl.searchInput.parent().parent()[0],\n        calculateContainerWidth = function() {\n          // Return the container width only if the search input is visible\n          return container.clientWidth * !!input.offsetParent;\n        },\n        updateIfVisible = function(containerWidth) {\n          if (containerWidth === 0) {\n            return false;\n          }\n          var inputWidth = containerWidth - input.offsetLeft - (ctrl.multiple ? 16 : 0);\n          if (inputWidth < 50) inputWidth = containerWidth;\n          ctrl.searchInput.css('width', inputWidth+'px');\n          return true;\n        };\n\n    ctrl.searchInput.css('width', '10px');\n    $timeout(function() { //Give tags time to render correctly\n      if (sizeWatch === null && !updateIfVisible(calculateContainerWidth())) {\n        sizeWatch = $scope.$watch(calculateContainerWidth, function(containerWidth) {\n          if (updateIfVisible(containerWidth)) {\n            sizeWatch();\n            sizeWatch = null;\n          }\n        });\n      }\n    }, 0, false);\n  };\n\n  function _convertTokens() {\n    if (!ctrl.taggingTokens.isActivated) {\n      return [];\n    }\n    var tokens = [];\n    for (var i = 0, len = ctrl.taggingTokens.tokens.length; i < len; i++) {\n      tokens.push(KEY.toSeparator(ctrl.taggingTokens.tokens[i]) || ctrl.taggingTokens.tokens[i]);\n    }\n    return tokens;\n  }\n\n  function _makeTagListUsingFct(stringTokens) {\n    var items = [];\n    angular.forEach(stringTokens, function (stringToken) {\n      var newItem = ctrl.tagging.fct(stringToken);\n      if (angular.isArray(newItem)) {\n        items = items.concat(newItem);\n      } else if (newItem) {\n        items.push(newItem);\n      }\n    });\n    return items;\n  }\n\n  ctrl.parseStringToTagMap = function(str) {\n    if (ctrl.multiple && ctrl.tagging.isActivated && ctrl.tagging.fct) {\n      var tokens = _convertTokens(),\n        stringTokens = tokens.length > 0 ? str.split(new RegExp(tokens.join('|'), 'g')) : str;\n      return _makeTagListUsingFct(stringTokens);\n    }\n    return [];\n  };\n\n  function _handleSelection(key, event) {\n    var processed = true;\n    switch (key) {\n      case KEY.DOWN:\n        event.preventDefault();\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex < ctrl.items.length - 1) {\n          _enableKeyDownMode();\n          ctrl.activeIndex++;\n        }\n        break;\n      case KEY.UP:\n        event.preventDefault();\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex === -1) ctrl.activeIndex = ctrl.items.length - 1;\n        else if (ctrl.activeIndex > 0) {\n          _enableKeyDownMode();\n          ctrl.activeIndex--;\n        }\n        break;\n      case KEY.TAB:\n        if (ctrl.items.length > 0 && (!ctrl.multiple || ctrl.open)) {\n          ctrl.select(ctrl.items[ctrl.activeIndex], {skipFocusser: true});\n        }\n        break;\n      case KEY.ENTER:\n        if(ctrl.open && (ctrl.tagging.isActivated || ctrl.activeIndex >= 0)){\n          ctrl.items.length > 0 && ctrl.select(ctrl.items[ctrl.activeIndex], {skipFocusser: ctrl.skipFocusser}); // Make sure at least one dropdown item is highlighted before adding if not in tagging mode\n        } else {\n          ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        }\n        break;\n      case KEY.ESC:\n        (!ctrl.resetOnEsc && ctrl.open && ctrl.items.length > 0) ? ctrl.close({skipResetInput: ctrl.multiple}) : _resetSearchInput(true);\n        break;\n      default:\n        processed = false;\n    }\n    return processed;\n  }\n\n  var timeoutInstance = null;\n  function _enableKeyDownMode() {\n    $timeout.cancel(timeoutInstance);\n    ctrl.keyDownMode = true;\n    timeoutInstance = $timeout(function () {\n      ctrl.keyDownMode = false;\n    }, 300, false);\n  }\n\n    // Bind to keyboard shortcuts\n  ctrl.searchInput.on('keydown', function(e) {\n\n    var key = e.which;\n\n    if (~[KEY.ENTER,KEY.ESC].indexOf(key)){\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    if (KEY.TAB === key && ctrl.multiple) {\n      (ctrl.open && ctrl.activeIndex > -1) ? e.preventDefault() : ctrl.close();\n    }\n\n    // if(~[KEY.ESC,KEY.TAB].indexOf(key)){\n    //   //TODO: SEGURO?\n    //   ctrl.close();\n    // }\n\n    $scope.$apply(function() {\n\n      var tagged = false;\n\n      if (ctrl.items.length > 0 || ctrl.tagging.isActivated) {\n        if (!ctrl.interceptChoiceKeydownEvent || !ctrl.interceptChoiceKeydownEvent($scope.$parent, {$event: e, $select: ctrl})) {\n          _handleSelection(key, e);\n        }\n        if ( ctrl.taggingTokens.isActivated ) {\n          for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {\n            // ,를 구분자로 넣으면 <와 ,를 구분하지 못해서 버그가 생기므로 이를 해결하기 위해 shiftKey를 눌렀는지 확인\n            if ( ctrl.taggingTokens.tokens[i] === KEY.MAP[e.keyCode] && !e.shiftKey ) {\n              // make sure there is a new value to push via tagging\n              if ( ctrl.search.length > 0 ) {\n                tagged = true;\n              }\n            }\n          }\n          if ( tagged ) {\n            $timeout(function() {\n              ctrl.searchInput.triggerHandler('tagged');\n              var newItem = ctrl.search.replace(KEY.MAP[e.keyCode],'').trim();\n              if ( ctrl.tagging.fct ) {\n                newItem = ctrl.tagging.fct( newItem );\n              }\n              if (newItem) {\n                ctrl.activeIndex = 0; // 선택이 안되는 버그 수정 패치코드\n                ctrl.select(newItem, {skipFocusser: true});\n              }\n            });\n          }\n        }\n      }\n\n    });\n\n    if(KEY.isVerticalMovement(key) && ctrl.items.length > 0){\n      ctrl.ensureHighlightVisible();\n    }\n\n    if (key === KEY.ENTER || key === KEY.ESC) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n  });\n\n  function _pasteData(el, data) {\n    var value = el.value;\n    if(angular.isNumber(el.selectionStart)) {\n      var startPos = el.selectionStart,\n        endPos = el.selectionEnd,\n        result = value.slice(0, startPos) + data + value.slice(endPos);\n      startPos += data.length;\n      endPos = startPos;\n      return {\n        result: result,\n        startPos: startPos,\n        endPos: endPos\n      };\n    }\n    // selectionStart is not supported in IE8 and we don't want hacky workarounds so we compromise\n    else return {\n      result: value + data\n    };\n  }\n\n  ctrl.searchInput.on('paste', function (e) {\n    var data, result;\n\n    if (window.clipboardData && window.clipboardData.getData) { // IE\n      data = window.clipboardData.getData('Text');\n    } else {\n      data = (e.originalEvent || e).clipboardData.getData('text/plain');\n    }\n\n    // Prepend the current input field text to the paste buffer.\n    result = _pasteData(e.target, data);\n    data = result.result;\n\n    if (data && data.length > 0) {\n      // If tagging try to split by tokens and add items\n      if (ctrl.taggingTokens.isActivated) {\n        var items = ctrl.parseStringToTagMap(data);\n        if (items.length === 0 ||\n          (ctrl.taggingInvalid.isActivated && items.length === 1)) {\n          ctrl.search = data || EMPTY_SEARCH;\n        } else {\n          ctrl.activeIndex = 0; // 선택이 안되는 버그 수정 패치코드\n          ctrl.select(items, {skipFocusser: true});\n          ctrl.search = EMPTY_SEARCH;\n        }\n        // var items = [];\n        // for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {  // split by first token that is contained in data\n        //   var separator = KEY.toSeparator(ctrl.taggingTokens.tokens[i]) || ctrl.taggingTokens.tokens[i];\n        //   if (data.indexOf(separator) > -1) {\n        //     items = data.split(separator);\n        //     break;  // only split by one token\n        //   }\n        // }\n        // if (items.length === 0) {\n        //   items = [data];\n        // }\n        // var oldsearch = ctrl.search;\n        // angular.forEach(items, function (item) {\n        //   var newItem = ctrl.tagging.fct ? ctrl.tagging.fct(item) : item;\n        //   if (newItem) {\n        //     ctrl.select(newItem, true);\n        //   }\n        // });\n        // ctrl.search = oldsearch || EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      } else if (ctrl.paste) {\n        ctrl.paste(data);\n        ctrl.search = EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      } else {\n        ctrl.search = data || EMPTY_SEARCH;\n      }\n      $scope.$applyAsync();\n    }\n  });\n\n  ctrl.searchInput.on('tagged', function() {\n    $timeout(function() {\n      _resetSearchInput();\n    }, 0, false);\n  });\n\n  // See https://github.com/ivaynberg/select2/blob/3.4.6/select2.js#L1431\n  ctrl.ensureHighlightVisible = function () {\n    var container = $element.querySelectorAll('.ui-select-choices-content');\n    var choices = container && container[0] && container.querySelectorAll('.ui-select-choices-row');\n    if (!choices || choices.length < 1 || ctrl.activeIndex < 0) {\n      // throw uiSelectMinErr('choices', \"Expected multiple .ui-select-choices-row but got '{0}'.\", choices.length);\n      return;\n    }\n\n    var highlighted = choices[ctrl.activeIndex];\n    var posY = highlighted.offsetTop + highlighted.clientHeight - container[0].scrollTop;\n    var height = container[0].offsetHeight;\n\n    if (posY > height) {\n      container[0].scrollTop += posY - height;\n    } else if (posY < highlighted.clientHeight) {\n      if (ctrl.isGrouped && ctrl.activeIndex === 0)\n        container[0].scrollTop = 0; //To make group header visible when going all the way up\n      else\n        container[0].scrollTop -= highlighted.clientHeight - posY;\n    }\n  }\n\n  // var onResize = $$uisDebounce(function() {\n  //   ctrl.sizeSearchInput();\n  // }, 50);\n  //\n  // angular.element($window).bind('resize', onResize);\n  //\n  // $scope.$on('$destroy', function() {\n  //   ctrl.searchInput.off('keyup keydown tagged blur paste');\n  //   angular.element($window).off('resize', onResize);\n  // });\n\n  $scope.$on('$destroy', function() {\n    ctrl.searchInput.off('keyup keydown tagged blur paste');\n  });\n\n  angular.element($window).bind('resize', function() {\n    ctrl.sizeSearchInput();\n  });\n}]);\n\nuis.directive('uiSelect',\n  ['$document', 'uiSelectConfig', 'uiSelectMinErr', 'uisOffset', '$compile', '$parse', '$timeout', '$window',\n  function($document, uiSelectConfig, uiSelectMinErr, uisOffset, $compile, $parse, $timeout, $window) {\n\n  return {\n    restrict: 'EA',\n    templateUrl: function(tElement, tAttrs) {\n      var theme = tAttrs.theme || uiSelectConfig.theme;\n      return tAttrs.templateUrl || theme + (\n        angular.isDefined(tAttrs.multiple) ? angular.isDefined(tAttrs.toggleChoice) ? '/select-multiple.btn.tpl.html' : '/select-multiple.tpl.html' : '/select.tpl.html'\n      );\n    },\n    replace: true,\n    transclude: true,\n    require: ['uiSelect', '^ngModel'],\n    scope: true,\n\n    controller: 'uiSelectCtrl',\n    controllerAs: '$select',\n    compile: function(tElement, tAttrs) {\n\n      // Allow setting ngClass on uiSelect\n      var match = /{(.*)}\\s*{(.*)}/.exec(tAttrs.ngClass);\n      if(match) {\n        var combined = '{'+ match[1] +', '+ match[2] +'}';\n        tAttrs.ngClass = combined;\n        tElement.attr('ng-class', combined);\n      }\n\n      //Multiple or Single depending if multiple attribute presence\n      if (angular.isDefined(tAttrs.multiple))\n        tElement.append('<ui-select-multiple/>').removeAttr('multiple');\n      else\n        tElement.append('<ui-select-single/>');\n\n      if (tAttrs.inputId)\n        tElement.querySelectorAll('input.ui-select-search')[0].id = tAttrs.inputId;\n\n      return function(scope, element, attrs, ctrls, transcludeFn) {\n\n        var $select = ctrls[0];\n        var ngModel = ctrls[1];\n\n        $select.$el = element;\n        $select.generatedId = uiSelectConfig.generateId();\n        $select.baseTitle = attrs.title || 'Select box';\n        $select.focusserTitle = $select.baseTitle + ' focus';\n        $select.focusserId = 'focusser-' + $select.generatedId;\n\n        $select.closeOnSelect = function() {\n          if (angular.isDefined(attrs.closeOnSelect)) {\n            return $parse(attrs.closeOnSelect)();\n          } else {\n            return uiSelectConfig.closeOnSelect;\n          }\n        }();\n\n        scope.$watch('skipFocusser', function() {\n            var skipFocusser = $select.toggleChoice || scope.$eval(attrs.skipFocusser);\n            $select.skipFocusser = skipFocusser !== undefined ? skipFocusser : uiSelectConfig.skipFocusser;\n        });\n\n        $select.toggleChoice = angular.isDefined(attrs.toggleChoice);\n        $select.onSelectCallback = $parse(attrs.onSelect);\n        $select.onRemoveCallback = $parse(attrs.onRemove);\n        $select.onCopyItemsCallback = $parse(attrs.onCopyItems);\n\n        // 기존의 tag가 같은지 비교를 angular.equals로만 비교했었으나 외부에서 주입할 수 있도록 수정\n        $select.isEqual = attrs.isEqualModel ?\n          _makeCustomEqualFunc(attrs.isEqualModel) :\n          function (value, other) {\n            return angular.equals(value, other);\n          };\n\n        var isPrevActiveCallback = angular.isDefined(attrs.isPrevActive) && $parse(attrs.isPrevActive);\n        $select.isPrevActive = function(itemIndex, item) {\n          return isPrevActiveCallback ? isPrevActiveCallback(scope, {prevActiveIndex: $select.prevActiveIndex, itemIndex: itemIndex, item: item}) :\n            $select.prevActiveIndex === itemIndex;\n        };\n\n        function _makeCustomEqualFunc(isEqualModelString) {\n          $select.hasCustomEqual = true;\n          var isEqualModelCallback = $parse(isEqualModelString);\n          // (가 있으면 콜백 함수로 가정\n          return isEqualModelString.indexOf('(') === -1 ?\n            function (value, other) {\n              return angular.isObject(value) ? value[isEqualModelString] === other[isEqualModelString] : angular.equals(value, other);\n            } :\n            function (value, other) {\n              return isEqualModelCallback(scope.$parent, {value: value, other: other});\n            };\n        }\n\n        //Limit the number of selections allowed\n        $select.limit = (angular.isDefined(attrs.limit)) ? parseInt(attrs.limit, 10) : undefined;\n\n        //Set reference to ngModel from uiSelectCtrl\n        $select.ngModel = ngModel;\n\n        $select.choiceGrouped = function(group){\n          return $select.isGrouped && group && group.name;\n        };\n\n        if(attrs.tabindex){\n          attrs.$observe('tabindex', function(value) {\n            $select.focusInput.attr('tabindex', value);\n            element.removeAttr('tabindex');\n          });\n        }\n\n        // attribute 가 설정되어 있으면 true\n        $select.resetOnEsc = attrs.resetOnEsc;\n\n        scope.$watch('searchEnabled', function() {\n            var searchEnabled = scope.$eval(attrs.searchEnabled);\n            $select.searchEnabled = searchEnabled !== undefined ? searchEnabled : uiSelectConfig.searchEnabled;\n        });\n\n        scope.$watch('sortable', function() {\n            var sortable = scope.$eval(attrs.sortable);\n            $select.sortable = sortable !== undefined ? sortable : uiSelectConfig.sortable;\n        });\n\n        attrs.$observe('disabled', function() {\n          // No need to use $eval() (thanks to ng-disabled) since we already get a boolean instead of a string\n          $select.disabled = attrs.disabled !== undefined ? attrs.disabled : false;\n        });\n\n        attrs.$observe('resetSearchInput', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var resetSearchInput = scope.$eval(attrs.resetSearchInput);\n          $select.resetSearchInput = resetSearchInput !== undefined ? resetSearchInput : true;\n        });\n\n        attrs.$observe('paste', function() {\n          $select.paste = scope.$eval(attrs.paste);\n        });\n\n        attrs.$observe('tagging', function() {\n          if(attrs.tagging !== undefined)\n          {\n            // $eval() is needed otherwise we get a string instead of a boolean\n            var taggingEval = scope.$eval(attrs.tagging);\n            $select.tagging = {isActivated: true, fct: taggingEval !== true ? taggingEval : undefined};\n          }\n          else\n          {\n            $select.tagging = {isActivated: false, fct: undefined};\n          }\n        });\n\n        attrs.$observe('taggingInvalid', function () {\n          if (attrs.taggingInvalid !== undefined) {\n            var taggingInvalidEval = scope.$eval(attrs.taggingInvalid);\n            $select.taggingInvalid = {isActivated: true, value: taggingInvalidEval};\n          } else {\n            $select.taggingInvalid = {isActivated: false, value: undefined};\n          }\n        });\n\n        attrs.$observe('taggingLabel', function() {\n          if(attrs.tagging !== undefined )\n          {\n            // check eval for FALSE, in this case, we disable the labels\n            // associated with tagging\n            if ( attrs.taggingLabel === 'false' ) {\n              $select.taggingLabel = false;\n            }\n            else\n            {\n              $select.taggingLabel = attrs.taggingLabel !== undefined ? attrs.taggingLabel : '(new)';\n            }\n          }\n        });\n\n        attrs.$observe('taggingTokens', function() {\n          if (attrs.tagging !== undefined) {\n            var tokens = attrs.taggingTokens !== undefined ? attrs.taggingTokens.split('|') : [',','ENTER'];\n            $select.taggingTokens = {isActivated: true, tokens: tokens };\n          }\n        });\n\n        attrs.$observe('interceptMatchKeydownEvent', function() {\n          if (attrs.interceptMatchKeydownEvent) {\n            $select.interceptMatchKeydownEvent = $parse(attrs.interceptMatchKeydownEvent);\n          }\n        });\n\n        attrs.$observe('interceptChoiceKeydownEvent', function() {\n          if (attrs.interceptChoiceKeydownEvent) {\n            $select.interceptChoiceKeydownEvent = $parse(attrs.interceptChoiceKeydownEvent);\n          }\n        });\n\n        //Automatically gets focus when loaded\n        if (angular.isDefined(attrs.autofocus)){\n          $timeout(function(){\n            $select.setFocus();\n          }, 0, false);\n        }\n\n        //Gets focus based on scope event name (e.g. focus-on='SomeEventName')\n        if (angular.isDefined(attrs.focusOn)){\n          scope.$on(attrs.focusOn, function() {\n              $timeout(function(){\n                $select.setFocus();\n              }, 0, false);\n          });\n        }\n\n        function onDocumentClick(e) {\n          if (!$select.open) return; //Skip it if dropdown is close\n\n          var contains = false;\n\n          if (window.jQuery) {\n            // Firefox 3.6 does not support element.contains()\n            // See Node.contains https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\n            contains = window.jQuery.contains(element[0], e.target);\n          } else {\n            contains = element[0].contains(e.target);\n          }\n\n          if (!contains && !$select.clickTriggeredSelect) {\n            var skipFocusser;\n            if (!$select.skipFocusser) {\n              //Will lose focus only with certain targets\n              var focusableControls = ['input','button','textarea','select'];\n              var targetController = angular.element(e.target).controller('uiSelect'); //To check if target is other ui-select\n              skipFocusser = targetController && targetController !== $select; //To check if target is other ui-select\n              if (!skipFocusser && e.target.tagName) skipFocusser =  ~focusableControls.indexOf(e.target.tagName.toLowerCase()); //Check if target is input, button or textarea\n            } else {\n              skipFocusser = true;\n            }\n            $select.close({skipFocusser: skipFocusser});\n            scope.$digest();\n          }\n          $select.clickTriggeredSelect = false;\n        }\n\n        // See Click everywhere but here event http://stackoverflow.com/questions/12931369\n        $document.on('click', onDocumentClick);\n\n        scope.$on('$destroy', function() {\n          $document.off('click', onDocumentClick);\n        });\n\n        // Move transcluded elements to their correct position in main template\n        transcludeFn(scope, function(clone) {\n          // See Transclude in AngularJS http://blog.omkarpatil.com/2012/11/transclude-in-angularjs.html\n\n          // One day jqLite will be replaced by jQuery and we will be able to write:\n          // var transcludedElement = clone.filter('.my-class')\n          // instead of creating a hackish DOM element:\n          var transcluded = angular.element('<div>').append(clone);\n\n          var transcludedMatch = transcluded.querySelectorAll('.ui-select-match');\n          transcludedMatch.removeAttr('ui-select-match'); //To avoid loop in case directive as attr\n          transcludedMatch.removeAttr('data-ui-select-match'); // Properly handle HTML5 data-attributes\n          if (transcludedMatch.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-match but got '{0}'.\", transcludedMatch.length);\n          }\n          element.querySelectorAll('.ui-select-match').replaceWith(transcludedMatch);\n\n          var transcludedChoices = transcluded.querySelectorAll('.ui-select-choices');\n          transcludedChoices.removeAttr('ui-select-choices'); //To avoid loop in case directive as attr\n          transcludedChoices.removeAttr('data-ui-select-choices'); // Properly handle HTML5 data-attributes\n          if (transcludedChoices.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-choices but got '{0}'.\", transcludedChoices.length);\n          }\n          element.querySelectorAll('.ui-select-choices').replaceWith(transcludedChoices);\n\n          var transcludedHeader = transcluded.querySelectorAll('.ui-select-header');\n          transcludedHeader.removeAttr('ui-select-header'); // To avoid loop in case directive as attr\n          transcludedHeader.removeAttr('data-ui-select-header'); // Properly handle HTML5 data-attributes\n          if (transcludedHeader.length == 1) {\n            element.querySelectorAll('.ui-select-header').replaceWith(transcludedHeader);\n          } else {\n            element.querySelectorAll('.ui-select-header').remove();\n          }\n\n          var transcludedFooter = transcluded.querySelectorAll('.ui-select-footer');\n          transcludedFooter.removeAttr('ui-select-footer'); // To avoid loop in case directive as attr\n          transcludedFooter.removeAttr('data-ui-select-footer'); // Properly handle HTML5 data-attributes\n          if (transcludedFooter.length == 1) {\n            element.querySelectorAll('.ui-select-footer').replaceWith(transcludedFooter);\n          } else {\n            element.querySelectorAll('.ui-select-footer').remove();\n          }\n        });\n\n        //Debounce - avoid Frequent Events when append to body\n        var _winResizeDelayPromise;\n        function windowResizeHandler() {\n          $timeout.cancel(_winResizeDelayPromise);\n          if ($select.open) {\n            _winResizeDelayPromise = $timeout(function () {\n              resetDropdown();\n              positionDropdown();\n            }, 50, false);\n          }\n        }\n\n        // Support for appending the select field to the body when its open\n        var appendToBody = scope.$eval(attrs.appendToBody);\n        if (appendToBody !== undefined ? appendToBody : uiSelectConfig.appendToBody) {\n          angular.element($window).on('resize', windowResizeHandler);\n          scope.$watch('$select.open', function(isOpen) {\n            if (isOpen) {\n              positionDropdown();\n            } else {\n              resetDropdown();\n            }\n          });\n\n          // Move the dropdown back to its original location when the scope is destroyed. Otherwise\n          // it might stick around when the user routes away or the select field is otherwise removed\n          scope.$on('$destroy', function() {\n            resetDropdown();\n            angular.element($window).off('resize', windowResizeHandler);\n          });\n        }\n\n        // Hold on to a reference to the .ui-select-container element for appendToBody support\n        var placeholder = null,\n            originalWidth = '';\n\n        function positionDropdown() {\n          // Remember the absolute position of the element\n          var offset = uisOffset(element);\n\n          // Clone the element into a placeholder element to take its original place in the DOM\n          placeholder = angular.element('<div class=\"ui-select-placeholder\"></div>');\n          placeholder[0].style.width = offset.width + 'px';\n          placeholder[0].style.height = offset.height + 'px';\n          element.after(placeholder);\n\n          // Remember the original value of the element width inline style, so it can be restored\n          // when the dropdown is closed\n          originalWidth = element[0].style.width;\n\n          // Now move the actual dropdown element to the end of the body\n          $document.find('body').append(element);\n\n          element[0].style.position = 'absolute';\n          element[0].style.left = offset.left + 'px';\n          element[0].style.top = offset.top + 'px';\n          element[0].style.width = offset.width + 'px';\n        }\n\n        function resetDropdown() {\n          if (placeholder === null) {\n            // The dropdown has not actually been display yet, so there's nothing to reset\n            return;\n          }\n\n          // Move the dropdown element back to its original location in the DOM\n          placeholder.replaceWith(element);\n          placeholder = null;\n\n          element[0].style.position = '';\n          element[0].style.left = '';\n          element[0].style.top = '';\n          element[0].style.width = originalWidth;\n\n          // Set focus back on to the moved element\n          $select.setFocus();\n        }\n\n        // Hold on to a reference to the .ui-select-dropdown element for direction support.\n        var dropdown = null,\n            directionUpClassName = 'direction-up';\n\n        // Support changing the direction of the dropdown if there isn't enough space to render it.\n        scope.$watch('$select.open', function() {\n\n          if ($select.dropdownPosition === 'auto' || $select.dropdownPosition === 'up'){\n            scope.calculateDropdownPos();\n          }\n\n        });\n\n        var setDropdownPosUp = function(offset, offsetDropdown){\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = 'absolute';\n          dropdown[0].style.top = (offsetDropdown.height * -1) + 'px';\n          element.addClass(directionUpClassName);\n\n        };\n\n        var setDropdownPosDown = function(offset, offsetDropdown){\n\n          element.removeClass(directionUpClassName);\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = '';\n          dropdown[0].style.top = '';\n\n        };\n\n        scope.calculateDropdownPos = function(){\n\n          if ($select.open) {\n            dropdown = angular.element(element).querySelectorAll('.ui-select-dropdown');\n            if (dropdown.length === 0) {\n              return;\n            }\n\n            // Hide the dropdown so there is no flicker until $timeout is done executing.\n            dropdown[0].style.opacity = 0;\n\n            // Delay positioning the dropdown until all choices have been added so its height is correct.\n            $timeout(function(){\n\n              if ($select.dropdownPosition === 'up'){\n                  //Go UP\n                  setDropdownPosUp();\n\n              }else{ //AUTO\n\n                element.removeClass(directionUpClassName);\n\n                var offset = uisOffset(element);\n                var offsetDropdown = uisOffset(dropdown);\n\n                //https://code.google.com/p/chromium/issues/detail?id=342307#c4\n                var scrollTop = $document[0].documentElement.scrollTop || $document[0].body.scrollTop; //To make it cross browser (blink, webkit, IE, Firefox).\n\n                // Determine if the direction of the dropdown needs to be changed.\n                if (offset.top + offset.height + offsetDropdown.height > scrollTop + $document[0].documentElement.clientHeight) {\n                  //Go UP\n                  setDropdownPosUp(offset, offsetDropdown);\n                }else{\n                  //Go DOWN\n                  setDropdownPosDown(offset, offsetDropdown);\n                }\n\n              }\n\n              // Display the dropdown once it has been positioned.\n              dropdown[0].style.opacity = 1;\n            }, 0, false);\n          } else {\n              if (dropdown === null || dropdown.length === 0) {\n                return;\n              }\n\n              // Reset the position of the dropdown.\n              dropdown[0].style.position = '';\n              dropdown[0].style.top = '';\n              element.removeClass(directionUpClassName);\n          }\n        };\n      };\n    }\n  };\n}]);\n\n//추후 개발환경 세팅해서 file로 분리\nuis.factory('uiSelectDragFactory', function () {\n  return {}\n});\n\n//추후 개발환경 세팅해서 file로 분리\nuis.directive('uiSelectMoveable', ['$timeout', 'uiSelectConfig', 'uiSelectMinErr', 'uiSelectDragFactory', function ($timeout, uiSelectConfig, uiSelectMinErr, uiSelectDragFactory) {\n  return {\n    require: 'uiSelect',\n    link: function (scope, element, attrs, $select) {\n      element.addClass('ui-select-moveable');\n      //현재 select가 drag중인지 체크\n      var isCurrentDragging = false,\n        //드레그 한 아이템을 삽입할 위치\n        dragoverItemIndex = null,\n\n        //drag 데이터 타입\n        DRAG_DATA_PREFIX = 'ui-select-item',\n        //drag event를 걸 아이템\n        DRAGGABLE_ITEM_CLASS = 'ui-select-match-item',\n\n        //drop이 가능한지 ui에 표시\n        DROPPABLE_CLASS = 'ui-select-droppable',\n        DROPPABLE_IN_ITEM_CLASS = 'ui-select-droppable-in-item',\n\n        //draging 클래스를 ui에 표시\n        DRAGGING_CLASS = 'ui-select-dragging',\n\n        //drop할 곳이 아이템의 왼쪽인지 오른쪽인지 ui에 표시\n        DRAGOVER_LEFT = 'ui-select-item-drag-over-left',\n        DRAGOVER_RIGHT = 'ui-select-item-drag-over-right';\n\n      element.on('dragstart', '.' + DRAGGABLE_ITEM_CLASS, function (event) {\n        var items = scope.$selectMultiple.getActiveItems(_getDragIndexes($(this).index()));\n        isCurrentDragging = true;\n        uiSelectDragFactory.idDragging = true;\n        uiSelectDragFactory.dropComplete = false;\n        uiSelectDragFactory.currentElement = false;\n        dragoverItemIndex = 0;\n        element[0].classList.add(DRAGGING_CLASS);\n\n        event.dataTransfer.effectAllowed = \"move\";\n        event.dataTransfer.setDragImage(_getDragImage(items.length), -10, -10);\n        event.dataTransfer.setData('text', DRAG_DATA_PREFIX + JSON.stringify(items));\n      });\n\n      element.on('dragend', '.' + DRAGGABLE_ITEM_CLASS, function (event) {\n        element[0].classList.remove(DRAGGING_CLASS);\n        event.currentTarget.classList.remove(DRAGOVER_LEFT, DRAGOVER_RIGHT);\n\n        if (uiSelectDragFactory.dropComplete && !uiSelectDragFactory.currentElement) {\n          scope.$selectMultiple.removeChoice(_getDragIndexes($(this).index()));\n          scope.$selectMultiple.activeMatchIndexes = [];\n        }\n        uiSelectDragFactory.idDragging = false;\n        isCurrentDragging = false;\n      });\n\n      element.on('drop', '.' + DRAGGABLE_ITEM_CLASS, function (event) {\n        element[0].classList.remove(DROPPABLE_IN_ITEM_CLASS);\n        event.currentTarget.classList.remove(DRAGOVER_LEFT, DRAGOVER_RIGHT);\n      });\n\n      element.on('dragleave', '.' + DRAGGABLE_ITEM_CLASS, function (event) {\n        element[0].classList.remove(DROPPABLE_IN_ITEM_CLASS);\n        event.currentTarget.classList.remove(DRAGOVER_LEFT, DRAGOVER_RIGHT);\n      });\n\n      element.on('dragover', '.' + DRAGGABLE_ITEM_CLASS, function (event) {\n        event.currentTarget.classList.remove(DRAGOVER_LEFT, DRAGOVER_RIGHT);\n\n        if (uiSelectDragFactory.idDragging) {\n          element[0].classList.add(DROPPABLE_IN_ITEM_CLASS);\n          if (_getOffset(event) > (this.offsetWidth / 2)) {\n            event.currentTarget.classList.add(DRAGOVER_RIGHT);\n            dragoverItemIndex = $(this).index() + 1;\n          } else {\n            event.currentTarget.classList.add(DRAGOVER_LEFT);\n            dragoverItemIndex = $(this).index();\n          }\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n      });\n\n      element.on('drop', function (event) {\n        event.preventDefault();\n        event.dataTransfer.dropEffect = \"none\";\n        event.currentTarget.classList.remove(DROPPABLE_CLASS);\n\n        if (!isAllowDrop(event)) {\n          uiSelectDragFactory.dropComplete = false;\n          return true;\n        }\n\n        uiSelectDragFactory.dropComplete = true;\n\n        var items = JSON.parse(event.dataTransfer.getData('text').substr(DRAG_DATA_PREFIX.length)),\n          option = {index: dragoverItemIndex};\n\n        //같은 ui-select 내부\n        if (isCurrentDragging) {\n          uiSelectDragFactory.currentElement = true;\n          option.smallerIndexNum = scope.$selectMultiple.activeMatchIndexes.filter(function (i) {\n            return i < dragoverItemIndex\n          }).length;\n        }\n        $select.activeIndex = 0; // 선택이 안되는 버그 수정 패치코드\n        $select.select(items, option);\n        dragoverItemIndex -= option.smallerIndexNum || 0;\n        scope.$selectMultiple.activeMatchIndexes = _getMovedMatchIndex(items.length);\n        event.stopPropagation();\n      });\n\n      element.on('dragenter', function (event) {\n        event.preventDefault();\n        if (uiSelectDragFactory.idDragging) {\n          event.currentTarget.classList.add(DROPPABLE_CLASS);\n        }\n        return true;\n      });\n\n\n      element.on('dragleave', function (event) {\n        event.preventDefault();\n        event.currentTarget.classList.remove(DROPPABLE_CLASS);\n        uiSelectDragFactory.dropComplete = false;\n        return true;\n      });\n\n      element.on('dragover', function (event) {\n        event.preventDefault();\n        if (uiSelectDragFactory.idDragging) {\n          event.currentTarget.classList.add(DROPPABLE_CLASS);\n        }\n        event.dataTransfer.dropEffect = \"move\";\n        dragoverItemIndex = element.find('.' + DRAGGABLE_ITEM_CLASS).length;\n        return true;\n      });\n\n      //dragged인 아이템이 같은 컴퍼넌트가 아니고 type이 ui-select일 경우\n      function isAllowDrop(event) {\n        var text = event.dataTransfer.getData('text');\n        return text && (text.substr(0, DRAG_DATA_PREFIX.length) === DRAG_DATA_PREFIX);\n      }\n\n      scope.$on('$destroy', function () {\n        element.off('dragstart');\n        element.off('dragend');\n        element.off('drop');\n        element.off('dragenter');\n        element.off('dragleave');\n        element.off('dragover');\n      });\n\n      function _getDragIndexes(targetIndex) {\n        if (scope.$selectMultiple.activeMatchIndexes.indexOf(targetIndex) < 0) {\n          scope.$selectMultiple.activeMatchIndexes = [targetIndex]\n        }\n        return scope.$selectMultiple.activeMatchIndexes;\n      }\n\n      //TODO: option 으로 변경\n      function _getDragImage(length) {\n        var drag_icon = document.createElement(\"div\");\n        drag_icon.innerText = length;\n        drag_icon.className = \"drag-icon\";\n        drag_icon.style.position = \"absolute\";\n        drag_icon.style.top = \"-100px\";\n        drag_icon.style.right = \"0px\";\n        drag_icon.style.padding = \"5px 20px\";\n        drag_icon.style.background = \"#384260\";\n        drag_icon.style.color = \"#fff\";\n        drag_icon.style.zIndex = \"9999\";\n        document.body.appendChild(drag_icon);\n        return drag_icon;\n      }\n\n      function _getOffset(e) {\n        return e.offsetX || e.layerX || (e.originalEvent ? e.originalEvent.offsetX : 0);\n      }\n\n      function _getMovedMatchIndex(length) {\n        var list = [];\n        for (var i = dragoverItemIndex; i < dragoverItemIndex + length; i++) {\n          list.push(i);\n        }\n        return list;\n      }\n    }\n  };\n}]);\n\nuis.directive('uiSelectFooter', ['uiSelectConfig', function (uiSelectConfig) {\n  return {\n    templateUrl: function (tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-footer');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/footer.tpl.html';\n    },\n    restrict: 'EA',\n    transclude: true,\n    replace: true\n  };\n}]);\n\nuis.directive('uiSelectHeader', ['uiSelectConfig', function (uiSelectConfig) {\n  return {\n    templateUrl: function (tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-header');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/header.tpl.html';\n    },\n    restrict: 'EA',\n    transclude: true,\n    replace: true\n  };\n}]);\n\nuis.directive('uiSelectMatch', ['uiSelectConfig', function(uiSelectConfig) {\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement, tAttrs) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-match');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      var multi = tElement.parent().attr('multiple');\n      var toggleChoice = angular.isDefined(tElement.parent().attr('toggle-choice'));\n      return tAttrs.templateUrl || theme + (multi ? (toggleChoice ? '/match-multiple.btn.tpl.html' : '/match-multiple.tpl.html') : '/match.tpl.html');\n    },\n    link: function(scope, element, attrs, $select) {\n      $select.lockChoiceExpression = attrs.uiLockChoice;\n      attrs.$observe('placeholder', function(placeholder) {\n        $select.placeholder = placeholder !== undefined ? placeholder : uiSelectConfig.placeholder;\n      });\n\n      function setAllowClear(allow) {\n        $select.allowClear = (angular.isDefined(allow)) ? (allow === '') ? true : (allow.toLowerCase() === 'true') : false;\n      }\n\n      attrs.$observe('allowClear', setAllowClear);\n      setAllowClear(attrs.allowClear);\n\n      if($select.multiple){\n        $select.sizeSearchInput();\n      }\n\n    }\n  };\n\n  // function getAttribute(elem, attribute) {\n  //   if (elem[0].hasAttribute(attribute))\n  //     return elem.attr(attribute);\n  //\n  //   if (elem[0].hasAttribute('data-' + attribute))\n  //     return elem.attr('data-' + attribute);\n  //\n  //   if (elem[0].hasAttribute('x-' + attribute))\n  //     return elem.attr('x-' + attribute);\n  // }\n}]);\n\nuis.directive('uiSelectMultiple', ['uiSelectMinErr', '$timeout', '$document', function (uiSelectMinErr, $timeout, $document) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n\n    controller: ['$scope', '$timeout', function ($scope, $timeout) {\n\n      var ctrl = this,\n        $select = $scope.$select,\n        ngModel;\n\n      if (angular.isUndefined($select.selected))\n        $select.selected = [];\n\n      //Wait for link fn to inject it\n      $scope.$applyAsync(function () {\n        ngModel = $scope.ngModel;\n      });\n\n      ctrl.activeMatchIndexes = [];\n      ctrl.isPressShiftKey = false;\n      ctrl.isPressCtrlKey = false;\n\n      ctrl.updateModel = function () {\n        ngModel.$setViewValue(Date.now()); //Set timestamp as a unique string to force changes\n        ctrl.refreshComponent();\n      };\n\n      ctrl.refreshComponent = function () {\n        //Remove already selected items\n        //e.g. When user clicks on a selection, the selected array changes and\n        //the dropdown should remove that item\n        $select.refreshItems();\n        $select.sizeSearchInput();\n      };\n\n      // Remove item from multiple select\n      // option = {skipRemove, skipSync}\n      // skipRemove: remove관련 동작을 수행하지 않음(selected도 수정되지 않음)\n      // skipSync: sync관련 동작을 수행하지 않음(삭제는 수행)\n      ctrl.removeChoice = function (indexes, option) {\n        indexes = typeof indexes === 'number' ? [indexes] : indexes;\n        option = option || {};\n\n        var locals = {};\n        $select.selected = $select.selected.filter(function (value, index) {\n          if (indexes.indexOf(index) > -1) {\n            var removedChoice = value;\n            if (removedChoice._uiSelectChoiceLocked) {\n              return true;\n            }\n            locals[$select.parserResult.itemName] = removedChoice;\n            if (option.skipRemove) {\n              return true;\n            }\n          } else {\n            return true;\n          }\n        });\n\n        if (!option.skipRemove) {\n          $select.sizeSearchInput();\n          ctrl.updateModel();\n        }\n\n        // Give some time for scope propagation.\n        $timeout(function () {\n          $select.onRemoveCallback($scope, {\n            $model: $select.parserResult.modelMapper($scope, locals)\n          });\n        }, 0, false);\n      };\n\n      ctrl.getPlaceholder = function () {\n        //Refactor single?\n        if ($select.selected && $select.selected.length) return;\n        return $select.placeholder;\n      };\n\n      ctrl.onKeydownEditInput = function (e) {\n        var key = e.which;\n        if (key === KEY.ENTER) {\n          e.preventDefault();\n          $select.searchInput.trigger('focus');\n        }\n      };\n\n      ctrl.editItem = function (input, item, idx) {\n        if ($select.selected[idx] === item) {\n          var items = [];\n          // 삭제나 추가되었을 때의 동작은 수행하지만 실제 selected값은 수행되지 않게 호출\n          ctrl.removeChoice(idx, {skipRemove: true});\n          if ($select.tagging.isActivated && input.length > 0) {\n            items = $select.parseStringToTagMap(input);\n            $select.activeIndex = 0; // 선택이 안되는 버그 수정 패치코드\n            $select.select(items, {skipFocusser: true, skipAdd: true});\n          }\n\n          // 실제 selected값 변경 및 sync\n          // select를 하면서 기존의 태그가 삭제되었을 수도 있어서 검증후 제거\n          Array.prototype.splice.apply($select.selected, [idx, ($select.selected[idx] === item ? 1 : 0)].concat(items));\n          $select.sizeSearchInput();\n          ctrl.updateModel();\n        }\n      };\n\n      ctrl.isActiveIndex = function (i) {\n        return ctrl.activeMatchIndexes.indexOf(i) > -1;\n      };\n\n      ctrl.pushActiveMatchIndex = function (i) {\n        if (!ctrl.isActiveIndex(i)) {\n          ctrl.activeMatchIndexes.push(i);\n        }\n      };\n\n      ctrl.toggleMatchIndex = function (i) {\n        if (!ctrl.isActiveIndex(i)) {\n          ctrl.activeMatchIndexes.push(i);\n        } else {\n          ctrl.activeMatchIndexes.splice(i, 1);\n        }\n      };\n\n      ctrl.isInvalid = function (item) {\n        return $select.taggingInvalid.isActivated && item[$select.taggingInvalid.value];\n      };\n\n      ctrl.getActiveItems = function (indexes) {\n        ctrl.updateModel();\n        return $select.selected.filter(function (v, i) {\n          return indexes.indexOf(i) > -1;\n        });\n      };\n\n      ctrl.activeItem = function (i) {\n        $select.close();\n        if (ctrl.isPressShiftKey && ctrl.activeMatchIndexes.length > 0) {\n          var min = Math.min.apply(null, ctrl.activeMatchIndexes);\n          var max = Math.min.apply(null, ctrl.activeMatchIndexes);\n          if (i < min) {\n            ctrl.activeItemInRange(i, min);\n          } else if (i > max) {\n            ctrl.activeItemInRange(max, i);\n          } else {\n            ctrl.activeItemInRange(min, max);\n          }\n        } else if (ctrl.isPressCtrlKey) {\n          ctrl.pushActiveMatchIndex(i);\n        } else {\n          ctrl.activeMatchIndexes = [i];\n        }\n      };\n\n      ctrl.activeItemInRange = function (start, end) {\n        for (var i = start; i <= end; i++) {\n          ctrl.pushActiveMatchIndex(i);\n        }\n      };\n\n    }],\n    controllerAs: '$selectMultiple',\n\n    link: function (scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = scope.ngModel = ctrls[1];\n      var $selectMultiple = scope.$selectMultiple;\n\n      //$select.selected = raw selected objects (ignoring any property binding)\n\n      $select.multiple = true;\n      $select.removeSelected = true;\n\n      //Input that will handle focus\n      $select.focusInput = $select.searchInput;\n\n      //Properly check for empty if set to multiple\n      ngModel.$isEmpty = function (value) {\n        return !value || value.length === 0;\n      };\n\n      // TODO invalid tag를 결과에 포함하지 않기 위한 Fetch\n      var viewValueCache = $select.selected.slice(),\n        modelValueCache = [];\n\n      //From view --> model\n      ngModel.$parsers.unshift(function () {\n        var locals = {},\n          result,\n          resultMultiple = [];\n\n        if ($select.taggingInvalid.isActivated && angular.equals(viewValueCache, $select.selected)) {\n          return modelValueCache.slice();\n        }\n\n        for (var j = $select.selected.length - 1; j >= 0; j--) {\n          if ($select.taggingInvalid.isActivated && $select.selected[j][$select.taggingInvalid.value]) {\n            // TODO invalid tag의 경우 result에 포함하지 않음\n            continue;\n          }\n          locals = {};\n          locals[$select.parserResult.itemName] = $select.selected[j];\n          result = $select.parserResult.modelMapper(scope, locals);\n          resultMultiple.unshift(result);\n        }\n        if ($select.taggingInvalid.isActivated) {\n          viewValueCache = $select.selected.slice();\n          modelValueCache = resultMultiple.slice();\n        }\n        return resultMultiple;\n      });\n\n      // From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult.source(scope, {$select: {search: ''}}), //Overwrite $search\n          locals = {},\n          result;\n        if (!data) return inputValue;\n        var resultMultiple = [];\n        var checkFnMultiple = function (list, value) {\n          if (!list || !list.length) return;\n          for (var p = list.length - 1; p >= 0; p--) {\n            locals[$select.parserResult.itemName] = list[p];\n            result = $select.parserResult.modelMapper(scope, locals);\n            if ($select.parserResult.trackByExp) {\n              var propsItemNameMatches = /(\\w*)\\./.exec($select.parserResult.trackByExp);\n              var matches = /\\.([^\\s]+)/.exec($select.parserResult.trackByExp);\n              if (propsItemNameMatches && propsItemNameMatches.length > 0 && propsItemNameMatches[1] == $select.parserResult.itemName) {\n                if (matches && matches.length > 0 && result[matches[1]] == value[matches[1]]) {\n                  resultMultiple.unshift(list[p]);\n                  return true;\n                }\n              }\n            }\n            if ($select.isEqual(result, value)) {\n              resultMultiple.unshift(list[p]);\n              return true;\n            }\n          }\n          return false;\n        };\n        if (!inputValue) return resultMultiple; //If ngModel was undefined\n        if ($select.taggingInvalid.isActivated && angular.equals(modelValueCache, inputValue)) return viewValueCache.slice(); // if ngModel이 이전과 변한게 없으면 이전 값 반환\n        for (var k = inputValue.length - 1; k >= 0; k--) {\n          //Check model array of currently selected items\n          if (!checkFnMultiple($select.selected, inputValue[k])) {\n            //Check model array of all items available\n            if (!checkFnMultiple(data, inputValue[k])) {\n              //If not found on previous lists, just add it directly to resultMultiple\n              resultMultiple.unshift(inputValue[k]);\n            }\n          }\n        }\n        if ($select.taggingInvalid.isActivated) {\n          modelValueCache = inputValue.slice();\n          viewValueCache = resultMultiple.slice();\n        }\n        return resultMultiple;\n      });\n\n      //Watch for external model changes\n      scope.$watchCollection(function () {\n        return ngModel.$modelValue;\n      }, function (newValue, oldValue) {\n        if (oldValue != newValue) {\n          ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          $selectMultiple.refreshComponent();\n        }\n      });\n\n      ngModel.$render = function () {\n        // Make sure that model value is array\n        if (!angular.isArray(ngModel.$viewValue)) {\n          // Have tolerance for null or undefined values\n          if (angular.isUndefined(ngModel.$viewValue) || ngModel.$viewValue === null) {\n            $select.selected = [];\n          } else {\n            throw uiSelectMinErr('multiarr', \"Expected model value to be array but got '{0}'\", ngModel.$viewValue);\n          }\n        }\n        $select.selected = ngModel.$viewValue;\n        //$selectMultiple.refreshComponent();\n        scope.$applyAsync(); //To force $digest\n      };\n\n      scope.$on('uis:select', function (event, item, index) {\n        var dupIndex = $select.selected.findIndex( function (selection) { return $select.isEqual(selection, item); });\n        if (dupIndex > -1) {\n          if ($select.toggleChoice && index === undefined) {\n            return $selectMultiple.removeChoice(dupIndex);\n          }\n          $select.selected.splice(dupIndex, 1);\n        }\n\n        if ($select.selected.length >= $select.limit) {\n          return;\n        }\n        index === undefined ? $select.selected.push(item): $select.selected.splice(index, 0, item);\n        $selectMultiple.updateModel();\n      });\n\n      scope.$on('uis:activate', function () {\n        $selectMultiple.activeMatchIndexes = [];\n      });\n\n      scope.$watch('$select.disabled', function (newValue, oldValue) {\n        // As the search input field may now become visible, it may be necessary to recompute its size\n        if (oldValue && !newValue) $select.sizeSearchInput();\n      });\n\n      $select.searchInput.on('keydown', function (e) {\n        var key = e.which,\n          isSelectAll = KEY.isSelectAll(e, key);\n\n        scope.$apply(function () {\n          var processed = false;\n          // var tagged = false; //Checkme\n          if (isSelectAll) {\n            processed = _selectAll();\n          } else if ((e.which === KEY.LEFT || e.which === KEY.BACKSPACE) && $select.selected.length > 0) {\n            processed = _selectLast();\n          }\n          if (processed && key != KEY.TAB) {\n            //TODO Check si el tab selecciona aun correctamente\n            //Crear test\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        });\n      });\n\n      function _getCaretPosition(el) {\n        if (angular.isNumber(el.selectionStart)) return el.selectionStart;\n        // selectionStart is not supported in IE8 and we don't want hacky workarounds so we compromise\n        else return el.value.length;\n      }\n\n      // Handles selected options in \"multiple\" mode\n      function _handleMatchSelection(e) {\n        if ($selectMultiple.activeMatchIndexes.length === 0) {\n          return;\n        }\n\n        $select.close();\n\n        var isMultiActive = e.shiftKey,\n          key = e.which;\n\n        var length = $select.selected.length,\n          // none  = -1,\n          first = 0,\n          min = Math.min.apply(null, $selectMultiple.activeMatchIndexes),\n          max = Math.max.apply(null, $selectMultiple.activeMatchIndexes),\n          last = length - 1,\n          curr = $selectMultiple.activeMatchIndexes[$selectMultiple.activeMatchIndexes.length - 1],\n          next = Math.min(max + 1, last),\n          prev = Math.max(min - 1, first),\n          newIndex;\n\n        function getNewActiveMatchIndex() {\n          switch (key) {\n            case KEY.LEFT:\n              // Select previous/first item\n              if (isMultiActive && $selectMultiple.isActiveIndex(curr - 1)) {\n                return curr;\n              } else {\n                return prev;\n              }\n              break;\n            case KEY.RIGHT:\n              // Open drop-down\n              if (isMultiActive && $selectMultiple.isActiveIndex(curr + 1)) {\n                return curr;\n              } else if (!isMultiActive && curr === last) {\n                $select.searchInput.trigger('focus');\n                $select.activate();\n                return false;\n              } else {\n                return next;\n              }\n              break;\n            case KEY.BACKSPACE:\n              // Remove selected item and select previous/first\n              $selectMultiple.removeChoice($selectMultiple.activeMatchIndexes);\n              return prev;\n              // Select last item\n              break;\n            case KEY.DELETE:\n              // Remove selected item and select next item\n              $selectMultiple.removeChoice($selectMultiple.activeMatchIndexes);\n              return last;\n              break;\n          }\n        }\n\n        newIndex = getNewActiveMatchIndex();\n\n        if (!$select.selected.length || newIndex === false) {\n          $selectMultiple.activeMatchIndexes = [];\n          $select.searchInput.trigger('focus');\n          return;\n        }\n\n        if (isMultiActive) {\n          $selectMultiple.toggleMatchIndex(newIndex);\n        } else {\n          $selectMultiple.activeMatchIndexes = [newIndex];\n        }\n\n        return true;\n      }\n\n      function _selectAll() {\n        $selectMultiple.activeMatchIndexes = [];\n        for (var i = 0; i < $select.selected.length; i++) {\n          $selectMultiple.activeMatchIndexes.push(i);\n        }\n        $select.close();\n        $select.searchInput.trigger('blur');\n        return true;\n      }\n\n      function _selectLast() {\n        var caretPosition = _getCaretPosition($select.searchInput[0]),\n          searchLength = $select.search.length;\n        if (!caretPosition && !searchLength) {\n          $selectMultiple.activeMatchIndexes = [$select.selected.length - 1];\n          $select.close();\n          $select.searchInput.trigger('blur');\n          return true;\n        }\n      }\n\n      $select.searchInput.on('keyup', function (e) {\n\n        // TODO: -1로 setting안되도록\n        //if ( ! KEY.isVerticalMovement(e.which) ) {\n        //  scope.$applyAsync( function () {\n        //    $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n        //  });\n        //}\n        // Push a \"create new\" item into array if there is a search string\n        if ($select.tagging.isActivated && $select.search.length > 0) {\n\n          // return early with these keys\n          if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || KEY.isVerticalMovement(e.which)) {\n            return;\n          }\n          // always reset the activeIndex to the first item when tagging\n          //$select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          $select.activeIndex = 0; //TODO: taggingLabel이 flase여도 항상 0으로 세팅\n          // taggingLabel === false bypasses all of this\n          //if ($select.taggingLabel === false) return;\n\n          // 하위로직 필요없어서 copy하기 전으로 소스 이동\n          if ($select.tagging.fct !== undefined) {\n            scope.$applyAsync(function () {\n              $select.activeIndex = 0;\n            });\n            return;\n            // TODO newItem 추가 관련 코드 제거\n            // tagItems = $select.$filter('filter')(items,{'isTag': true});\n            // if ( tagItems.length > 0 ) {\n            //   tagItem = tagItems[0];\n            // }\n            // // remove the first element, if it has the `isTag` prop we generate a new one with each keyup, shaving the previous\n            // if ( items.length > 0 && tagItem ) {\n            //   hasTag = true;\n            //   items = items.slice(1,items.length);\n            //   stashArr = stashArr.slice(1,stashArr.length);\n            // }\n            // newItem = $select.tagging.fct($select.search);\n            // if(!newItem) {//TODO: taging false일때 item이 없으면 생성 안되도록\n            //   return;\n            // }\n            // // verify the new tag doesn't match the value of a possible selection choice or an already selected item.\n            // if (\n            //   stashArr.some(function (origItem) {\n            //     return $select.isEqual(origItem, $select.tagging.fct($select.search));\n            //   })\n            // ) {\n            //   scope.$applyAsync(function () {\n            //     $select.activeIndex = 0;\n            //     $select.items = items;\n            //   });\n            //   return;\n            // }\n            // newItem.isTag = true;\n            // handle newItem string and stripping dupes in tagging string context\n          }\n\n          var items = angular.copy($select.items);\n          var stashArr = angular.copy($select.items);\n          var newItem;\n          var item;\n          var hasTag = false;\n          var dupeIndex = -1;\n          var tagItems;\n          var tagItem;\n\n          // case for object tagging via transform `$select.tagging.fct` function\n\n          // find any tagging items already in the $select.items array and store them\n          tagItems = $select.$filter('filter')(items, function (item) {\n            return item.match($select.taggingLabel);\n          });\n          if (tagItems.length > 0) {\n            tagItem = tagItems[0];\n          }\n          item = items[0];\n          // remove existing tag item if found (should only ever be one tag item)\n          if (item !== undefined && items.length > 0 && tagItem) {\n            hasTag = true;\n            items = items.slice(1, items.length);\n            stashArr = stashArr.slice(1, stashArr.length);\n          }\n          newItem = $select.search + ' ' + $select.taggingLabel;\n          if (_findApproxDupe($select.selected, $select.search) > -1) {\n            return;\n          }\n          // verify the the tag doesn't match the value of an existing item from\n          // the searched data set or the items already selected\n          if (_findCaseInsensitiveDupe(stashArr.concat($select.selected))) {\n            // if there is a tag from prev iteration, strip it / queue the change\n            // and return early\n            if (hasTag) {\n              items = stashArr;\n              scope.$applyAsync(function () {\n                $select.activeIndex = 0;\n                $select.items = items;\n              });\n            }\n            return;\n          }\n          if (_findCaseInsensitiveDupe(stashArr)) {\n            // if there is a tag from prev iteration, strip it\n            if (hasTag) {\n              $select.items = stashArr.slice(1, stashArr.length);\n            }\n            return;\n          }\n\n          if (hasTag) dupeIndex = _findApproxDupe($select.selected, newItem);\n          // dupe found, shave the first item\n          if (dupeIndex > -1) {\n            items = items.slice(dupeIndex + 1, items.length - 1);\n          } else {\n            items = [newItem].concat(stashArr);\n          }\n          scope.$applyAsync(function () {\n            $select.activeIndex = 0;\n            $select.items = items;\n          });\n        }\n      });\n\n      function _findCaseInsensitiveDupe(arr) {\n        if (arr === undefined || $select.search === undefined) {\n          return false;\n        }\n        var hasDupe = arr.filter(function (origItem) {\n          if ($select.search.toUpperCase() === undefined || origItem === undefined) {\n            return false;\n          }\n          return origItem.toUpperCase() === $select.search.toUpperCase();\n        }).length > 0;\n\n        return hasDupe;\n      }\n\n      function _findApproxDupe(haystack, needle) {\n        var dupeIndex = -1;\n        if (angular.isArray(haystack)) {\n          var tempArr = angular.copy(haystack);\n          for (var i = 0; i < tempArr.length; i++) {\n            // handle the simple string version of tagging\n            if ($select.tagging.fct === undefined) {\n              // search the array for the match\n              if (tempArr[i] + ' ' + $select.taggingLabel === needle) {\n                dupeIndex = i;\n              }\n              // handle the object tagging implementation\n            } else {\n              var mockObj = tempArr[i];\n              if (angular.isObject(mockObj)) {\n                mockObj.isTag = true;\n              }\n              if ($select.isEqual(mockObj, needle)) {\n                dupeIndex = i;\n              }\n            }\n          }\n        }\n        return dupeIndex;\n      }\n\n      function _copySelection() {\n        var data = $select.onCopyItemsCallback(scope, {\n          $items: $select.selected.filter(function (value, index) {\n            return $selectMultiple.activeMatchIndexes.indexOf(index) > -1;\n          })\n        });\n        if (data) {\n          UTIL.copyToClipboard(data);\n        }\n      }\n\n      //Ctrl, Shift + 마우스를 통한 multi select\n      $document.on('keydown', _onDocumentKeydown);\n      $document.on('keyup', _toggleKeyPress);\n      $document.on('click', _onDocumentClick);\n\n      function _toggleKeyPress(e) {\n        $selectMultiple.isPressShiftKey = e.shiftKey;\n        $selectMultiple.isPressCtrlKey = KEY.isPressedCtrlKey(e);\n      }\n\n      function _onDocumentKeydown(e) {\n        _toggleKeyPress(e);\n        if ($select.interceptMatchKeydownEvent && $select.interceptMatchKeydownEvent(scope.$parent, {\n          $event: e, $select: $select, $selectMultiple: $selectMultiple\n        })) {\n          return;\n        }\n        if (KEY.isAllowControlKey(e.which)) {\n          scope.$applyAsync(function () {\n            _handleMatchSelection(e);\n          });\n        } else if (KEY.isCopy(e, e.which)) {\n          _copySelection();\n        }\n      }\n\n      function _onDocumentClick(e) {\n        var contains = false;\n\n        if (window.jQuery) {\n          contains = window.jQuery.contains($select.$el[0], e.target);\n        } else {\n          contains = $select.$el[0].contains(e.target);\n        }\n\n        if (!contains) {\n          scope.$applyAsync(function () {\n            $selectMultiple.activeMatchIndexes = [];\n          });\n        }\n      }\n\n      scope.$on('$destroy', function () {\n        $document.off('keydown', _onDocumentKeydown);\n        $document.off('keyup', _toggleKeyPress);\n        $document.off('click', _onDocumentClick);\n      });\n    }\n  };\n}]);\n\nuis.directive('uiSelectNoChoice',\n    ['uiSelectConfig', function (uiSelectConfig) {\n        return {\n            restrict: 'EA',\n            require: '^uiSelect',\n            replace: true,\n            transclude: true,\n            templateUrl: function (tElement) {\n                // Gets theme attribute from parent (ui-select)\n                var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n                return theme + '/no-choice.tpl.html';\n            }\n        };\n    }]);\nuis.directive('uiSelectSingle', ['$timeout','$compile', function($timeout, $compile) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = ctrls[1];\n\n      //From view --> model\n      ngModel.$parsers.unshift(function (inputValue) {\n        var locals = {},\n            result;\n        locals[$select.parserResult.itemName] = inputValue;\n        result = $select.parserResult.modelMapper(scope, locals);\n        return result;\n      });\n\n      //From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (data){\n          var checkFnSingle = function(d){\n            locals[$select.parserResult.itemName] = d;\n            result = $select.parserResult.modelMapper(scope, locals);\n            return result == inputValue;\n          };\n          //If possible pass same object stored in $select.selected\n          if ($select.selected && checkFnSingle($select.selected)) {\n            return $select.selected;\n          }\n          for (var i = data.length - 1; i >= 0; i--) {\n            if (checkFnSingle(data[i])) return data[i];\n          }\n        }\n        return inputValue;\n      });\n\n      //Update viewValue if model change\n      scope.$watch('$select.selected', function(newValue) {\n        if (ngModel.$viewValue !== newValue) {\n          ngModel.$setViewValue(newValue);\n        }\n      });\n\n      ngModel.$render = function() {\n        $select.selected = ngModel.$viewValue;\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        $select.selected = item;\n      });\n\n      scope.$on('uis:close', function (event, skipFocusser) {\n        $timeout(function(){\n          $select.focusser.prop('disabled', false);\n          if (!skipFocusser) $select.focusser[0].focus();\n        },0,false);\n      });\n\n      scope.$on('uis:activate', function () {\n        focusser.prop('disabled', true); //Will reactivate it on .close()\n      });\n\n      //Idea from: https://github.com/ivaynberg/select2/blob/79b5bf6db918d7560bdd959109b7bcfb47edaf43/select2.js#L1954\n      var focusser = angular.element(\"<input ng-disabled='$select.disabled' class='ui-select-focusser ui-select-offscreen' type='text' id='{{ $select.focusserId }}' aria-label='{{ $select.focusserTitle }}' aria-haspopup='true' role='button' />\");\n      $compile(focusser)(scope);\n      $select.focusser = focusser;\n\n      //Input that will handle focus\n      $select.focusInput = focusser;\n\n      element.parent().append(focusser);\n      focusser.bind(\"focus\", function(){\n        scope.$applyAsync(function(){\n          $select.focus = true;\n        });\n      });\n      focusser.bind(\"blur\", function(){\n        scope.$applyAsync(function(){\n          $select.focus = false;\n        });\n      });\n      focusser.bind(\"keydown\", function(e){\n\n        if (e.which === KEY.BACKSPACE) {\n          e.preventDefault();\n          e.stopPropagation();\n          $select.select(undefined);\n          scope.$applyAsync();\n          return;\n        }\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\n          return;\n        }\n\n        if (e.which == KEY.DOWN  || e.which == KEY.UP || e.which == KEY.ENTER || e.which == KEY.SPACE){\n          e.preventDefault();\n          e.stopPropagation();\n          $select.activate();\n        }\n\n        scope.$digest();\n      });\n\n      focusser.bind(\"keyup input\", function(e){\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || e.which == KEY.ENTER || e.which === KEY.BACKSPACE) {\n          return;\n        }\n\n        $select.activate(focusser.val()); //User pressed some regular key, so we pass it to the search input\n        focusser.val('');\n        scope.$digest();\n\n      });\n\n\n    }\n  };\n}]);\n\n/**\n * Debounces functions\n *\n * Taken from UI Bootstrap $$debounce source code\n * See https://github.com/angular-ui/bootstrap/blob/master/src/debounce/debounce.js\n *\n */\nuis.factory('$$uisDebounce', ['$timeout', function($timeout) {\n  return function(callback, debounceTime) {\n    var timeoutPromise;\n\n    return function() {\n      var self = this;\n      var args = Array.prototype.slice.call(arguments);\n      if (timeoutPromise) {\n        $timeout.cancel(timeoutPromise);\n      }\n\n      timeoutPromise = $timeout(function() {\n        callback.apply(self, args);\n      }, debounceTime);\n    };\n  };\n}]);\n\nuis.directive('uisOpenClose', ['$parse', function ($parse) {\n  return {\n    restrict: 'A',\n    require: 'uiSelect',\n    link: function (scope, element, attrs, $select) {\n      var openFlagParse = $parse(attrs.uisOpen);\n      $select.onOpenCloseCallback = $parse(attrs.uisOpenClose);\n      scope.$watch('$select.open', function (isOpen, previousState) {\n        if (isOpen !== previousState) {\n          openFlagParse(scope, {isOpen: isOpen});\n          $select.onOpenCloseCallback(scope, {\n            isOpen: isOpen\n          });\n        }\n      });\n\n      scope.$watch(openFlagParse, function(newVal){\n        if(newVal === true){\n          $select.activate();\n        }else if(newVal === false){\n          $select.close();\n        }\n      });\n    }\n  };\n}]);\n\n/**\n * Parses \"repeat\" attribute.\n *\n * Taken from AngularJS ngRepeat source code\n * See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L211\n *\n * Original discussion about parsing \"repeat\" attribute instead of fully relying on ng-repeat:\n * https://github.com/angular-ui/ui-select/commit/5dd63ad#commitcomment-5504697\n */\n\nuis.service('uisRepeatParser', ['uiSelectMinErr','$parse', function(uiSelectMinErr, $parse) {\n  var self = this;\n\n  /**\n   * Example:\n   * expression = \"address in addresses | filter: {street: $select.search} track by $index\"\n   * itemName = \"address\",\n   * source = \"addresses | filter: {street: $select.search}\",\n   * trackByExp = \"$index\",\n   */\n  self.parse = function(expression) {\n\n\n    var match;\n    //var isObjectCollection = /\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)/.test(expression);\n    // If an array is used as collection\n\n    // if (isObjectCollection){\n    // 000000000000000000000000000000111111111000000000000000222222222222220033333333333333333333330000444444444444444444000000000000000055555555555000000000000000000000066666666600000000\n    match = expression.match(/^\\s*(?:([\\s\\S]+?)\\s+as\\s+)?(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(\\s*[\\s\\S]+?)?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n    // 1 Alias\n    // 2 Item\n    // 3 Key on (key,value)\n    // 4 Value on (key,value)\n    // 5 Source expression (including filters)\n    // 6 Track by\n\n    if (!match) {\n      throw uiSelectMinErr('iexp', \"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.\",\n              expression);\n    }\n    \n    var source = match[5], \n        filters = '';\n\n    // When using (key,value) ui-select requires filters to be extracted, since the object\n    // is converted to an array for $select.items \n    // (in which case the filters need to be reapplied)\n    if (match[3]) {\n      // Remove any enclosing parenthesis\n      source = match[5].replace(/(^\\()|(\\)$)/g, '');\n      // match all after | but not after ||\n      var filterMatch = match[5].match(/^\\s*(?:[\\s\\S]+?)(?:[^\\|]|\\|\\|)+([\\s\\S]*)\\s*$/);\n      if(filterMatch && filterMatch[1].trim()) {\n        filters = filterMatch[1];\n        source = source.replace(filters, '');\n      }      \n    }\n\n    return {\n      itemName: match[4] || match[2], // (lhs) Left-hand side,\n      keyName: match[3], //for (key, value) syntax\n      source: $parse(source),\n      filters: filters,\n      trackByExp: match[6],\n      modelMapper: $parse(match[1] || match[4] || match[2]),\n      repeatExpression: function (grouped) {\n        var expression = this.itemName + ' in ' + (grouped ? '$group.items' : '$select.items');\n        if (this.trackByExp) {\n          expression += ' track by ' + this.trackByExp;\n        }\n        return expression;\n      } \n    };\n\n  };\n\n  self.getGroupNgRepeatExpression = function() {\n    return '$group in $select.groups';\n  };\n\n}]);\n\n}());\nangular.module(\"ui.select\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"bootstrap/choices.tpl.html\",\"<ul class=\\\"ui-select-choices ui-select-choices-content ui-select-dropdown dropdown-menu\\\" role=\\\"listbox\\\" ng-show=\\\"$select.open\\\"><li class=\\\"ui-select-choices-group\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\"><div class=\\\"divider\\\" ng-show=\\\"$select.isGrouped && $index > 0\\\"></div><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label dropdown-header\\\" ng-bind=\\\"$group.name\\\"></div><div ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\" role=\\\"option\\\"><a href=\\\"\\\" class=\\\"ui-select-choices-row-inner\\\"></a></div></li></ul>\");\n$templateCache.put(\"bootstrap/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><span ng-repeat=\\\"$item in $select.selected\\\"><span class=\\\"ui-select-match-item btn btn-default btn-xs\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ng-class=\\\"{\\'btn-primary\\':$selectMultiple.activeMatchIndex === $index, \\'select-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span class=\\\"close ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&nbsp;&times;</span> <span uis-transclude-append=\\\"\\\"></span></span></span></span>\");\n$templateCache.put(\"bootstrap/match.tpl.html\",\"<div class=\\\"ui-select-match\\\" ng-hide=\\\"$select.open\\\" ng-disabled=\\\"$select.disabled\\\" ng-class=\\\"{\\'btn-default-focus\\':$select.focus}\\\"><span tabindex=\\\"-1\\\" class=\\\"btn btn-default form-control ui-select-toggle\\\" aria-label=\\\"{{ $select.baseTitle }} activate\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" style=\\\"outline: 0;\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"ui-select-match-text pull-left\\\" ng-class=\\\"{\\'ui-select-allow-clear\\': $select.allowClear && !$select.isEmpty()}\\\" ng-transclude=\\\"\\\"></span> <i class=\\\"caret pull-right\\\" ng-click=\\\"$select.toggle($event)\\\"></i> <a ng-show=\\\"$select.allowClear && !$select.isEmpty()\\\" aria-label=\\\"{{ $select.baseTitle }} clear\\\" style=\\\"margin-right: 10px\\\" ng-click=\\\"$select.clear($event)\\\" class=\\\"btn btn-xs btn-link pull-right\\\"><i class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></i></a></span></div>\");\n$templateCache.put(\"bootstrap/no-choice.tpl.html\",\"<ul class=\\\"ui-select-no-choice dropdown-menu\\\" ng-show=\\\"$select.items.length == 0\\\"><li ng-transclude=\\\"\\\"></li></ul>\");\n$templateCache.put(\"bootstrap/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple ui-select-bootstrap dropdown form-control\\\" ng-class=\\\"{open: $select.open}\\\"><div><div class=\\\"ui-select-match\\\"></div><input type=\\\"text\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" class=\\\"ui-select-search input-xs\\\" placeholder=\\\"{{$selectMultiple.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" ng-model=\\\"$select.search\\\" role=\\\"combobox\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" ondrop=\\\"return false;\\\"></div><div class=\\\"ui-select-choices\\\"></div></div>\");\n$templateCache.put(\"bootstrap/select.tpl.html\",\"<div class=\\\"ui-select-container ui-select-bootstrap dropdown\\\" ng-class=\\\"{open: $select.open}\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"text\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" aria-expanded=\\\"true\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"form-control ui-select-search\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-show=\\\"$select.searchEnabled && $select.open\\\"><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"select2/choices.tpl.html\",\"<ul class=\\\"ui-select-choices ui-select-choices-content select2-results\\\"><li class=\\\"ui-select-choices-group\\\" ng-class=\\\"{\\'select2-result-with-children\\': $select.choiceGrouped($group) }\\\"><div ng-show=\\\"$select.choiceGrouped($group)\\\" class=\\\"ui-select-choices-group-label select2-result-label\\\" ng-bind=\\\"$group.name\\\"></div><ul role=\\\"listbox\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\" ng-class=\\\"{\\'select2-result-sub\\': $select.choiceGrouped($group), \\'select2-result-single\\': !$select.choiceGrouped($group) }\\\"><li role=\\\"option\\\" ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{\\'select2-highlighted\\': $select.isActive(this), \\'select2-disabled\\': $select.isDisabled(this)}\\\"><div class=\\\"select2-result-label ui-select-choices-row-inner\\\"></div></li></ul></li></ul>\");\n$templateCache.put(\"select2/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><li class=\\\"ui-select-match-item select2-search-choice\\\" ng-repeat=\\\"$item in $select.selected\\\" ng-class=\\\"{\\'select2-search-choice-focus\\':$selectMultiple.activeMatchIndex === $index, \\'select2-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span uis-transclude-append=\\\"\\\"></span> <a href=\\\"javascript:;\\\" class=\\\"ui-select-match-close select2-search-choice-close\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\" tabindex=\\\"-1\\\"></a></li></span>\");\n$templateCache.put(\"select2/match.tpl.html\",\"<a class=\\\"select2-choice ui-select-match\\\" ng-class=\\\"{\\'select2-default\\': $select.isEmpty()}\\\" ng-click=\\\"$select.toggle($event)\\\" aria-label=\\\"{{ $select.baseTitle }} select\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\" ng-transclude=\\\"\\\"></span> <abbr ng-if=\\\"$select.allowClear && !$select.isEmpty()\\\" class=\\\"select2-search-choice-close\\\" ng-click=\\\"$select.clear($event)\\\"></abbr> <span class=\\\"select2-arrow ui-select-toggle\\\"><b></b></span></a>\");\n$templateCache.put(\"select2/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple select2 select2-container select2-container-multi\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled}\\\"><ul class=\\\"select2-choices\\\"><span class=\\\"ui-select-match\\\"></span><li class=\\\"select2-search-field\\\"><input type=\\\"text\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"select2-input ui-select-search\\\" placeholder=\\\"{{$selectMultiple.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-hide=\\\"$select.disabled\\\" ng-model=\\\"$select.search\\\" ng-click=\\\"$select.activate()\\\" style=\\\"width: 34px;\\\" ondrop=\\\"return false;\\\"></li></ul><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open}\\\"><div class=\\\"ui-select-choices\\\"></div></div></div>\");\n$templateCache.put(\"select2/select.tpl.html\",\"<div class=\\\"ui-select-container select2 select2-container\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled, \\'select2-container-active\\': $select.focus, \\'select2-allowclear\\': $select.allowClear && !$select.isEmpty()}\\\"><div class=\\\"ui-select-match\\\"></div><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open}\\\"><div class=\\\"select2-search\\\" ng-show=\\\"$select.searchEnabled\\\"><input type=\\\"text\\\" autocomplete=\\\"off\\\" autocorrect=\\\"false\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"ui-select-search select2-input\\\" ng-model=\\\"$select.search\\\"></div><div class=\\\"ui-select-choices\\\"></div></div></div>\");\n$templateCache.put(\"selectize/choices.tpl.html\",\"<div ng-show=\\\"$select.open\\\" class=\\\"ui-select-choices ui-select-dropdown selectize-dropdown single\\\"><div class=\\\"ui-select-choices-content selectize-dropdown-content\\\"><div class=\\\"ui-select-choices-group optgroup\\\" role=\\\"listbox\\\"><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label optgroup-header\\\" ng-bind=\\\"$group.name\\\"></div><div role=\\\"option\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\"><div class=\\\"option ui-select-choices-row-inner\\\" data-selectable=\\\"\\\"></div></div></div></div></div>\");\n$templateCache.put(\"selectize/match.tpl.html\",\"<div ng-hide=\\\"($select.open || $select.isEmpty())\\\" class=\\\"ui-select-match\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"selectize/select.tpl.html\",\"<div class=\\\"ui-select-container selectize-control single\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"><div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"text\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search ui-select-toggle\\\" ng-click=\\\"$select.toggle($event)\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-hide=\\\"!$select.searchEnabled || ($select.selected && !$select.open)\\\" ng-disabled=\\\"$select.disabled\\\" aria-label=\\\"{{ $select.baseTitle }}\\\"></div><div class=\\\"ui-select-choices\\\"></div></div>\");}]);",null,null]}